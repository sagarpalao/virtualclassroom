/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package virtualclassroom;

import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ASUS
 */
public class UploadDataFrame extends javax.swing.JFrame {

    /**
     * Creates new form UploadDataFrame
     */
    String ipxcc="";
    String usrInput="";
    String showPane="";
    String userid="";
    String ffile="";
    String lffile="";
    String session;
    public UploadDataFrame(String ipxcc,String showPane,String userid,String sessionname) {
        this.ipxcc=ipxcc;
        this.showPane=showPane;
        this.userid=userid;
        this.session=sessionname;
        initComponents();
        setLocationRelativeTo(null);
    }
    public UploadDataFrame(String ipxcc,String usrInput,String showPane,String userid,String sessionname) {
        this.ipxcc=ipxcc;
        this.usrInput=usrInput;
        this.showPane=showPane;
        this.userid=userid;
        this.session=sessionname;
        initComponents();
        setLocationRelativeTo(null);
    }
    public UploadDataFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlSlideUpload = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtslidefile = new javax.swing.JTextField();
        btnaddSlide = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtslidetopic = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pnlUploadPDF = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtpdfname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtpdftopic = new javax.swing.JTextField();
        btnaddPDF = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Upload Data...");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel2.setText("Name of Presentation File");

        txtslidefile.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtslidefile.setToolTipText("Click to add a PPT file");
        txtslidefile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtslidefileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtslidefileMouseEntered(evt);
            }
        });
        txtslidefile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtslidefileActionPerformed(evt);
            }
        });
        txtslidefile.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtslidefileFocusGained(evt);
            }
        });

        btnaddSlide.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        btnaddSlide.setText("Upload...");
        btnaddSlide.setToolTipText("Upload the presenation for Participants for the selected node");
        btnaddSlide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddSlideActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel3.setText("Presentation Topic");

        txtslidetopic.setEditable(false);
        txtslidetopic.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 60)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Presentation Uploader...");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout pnlSlideUploadLayout = new javax.swing.GroupLayout(pnlSlideUpload);
        pnlSlideUpload.setLayout(pnlSlideUploadLayout);
        pnlSlideUploadLayout.setHorizontalGroup(
            pnlSlideUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSlideUploadLayout.createSequentialGroup()
                .addGroup(pnlSlideUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSlideUploadLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 45, Short.MAX_VALUE))
                    .addGroup(pnlSlideUploadLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlSlideUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSlideUploadLayout.createSequentialGroup()
                                .addGroup(pnlSlideUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlSlideUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtslidefile)
                                    .addComponent(txtslidetopic)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSlideUploadLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnaddSlide, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        pnlSlideUploadLayout.setVerticalGroup(
            pnlSlideUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSlideUploadLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSlideUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtslidefile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSlideUploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtslidetopic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(btnaddSlide)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Upload Slides", pnlSlideUpload);

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel5.setText("Name of the file");

        txtpdfname.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtpdfname.setToolTipText("Click to add a File");
        txtpdfname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtpdfnameMouseClicked(evt);
            }
        });
        txtpdfname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpdfnameActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel6.setText("Topic");

        txtpdftopic.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtpdftopic.setToolTipText("Give a topic for reference");

        btnaddPDF.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        btnaddPDF.setText("Upload...");
        btnaddPDF.setToolTipText("Click to upload the PDF for the Participants");
        btnaddPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddPDFActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 60)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("File Uploader...");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout pnlUploadPDFLayout = new javax.swing.GroupLayout(pnlUploadPDF);
        pnlUploadPDF.setLayout(pnlUploadPDFLayout);
        pnlUploadPDFLayout.setHorizontalGroup(
            pnlUploadPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUploadPDFLayout.createSequentialGroup()
                .addGroup(pnlUploadPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                    .addGroup(pnlUploadPDFLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(pnlUploadPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlUploadPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtpdfname)
                            .addComponent(txtpdftopic)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUploadPDFLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnaddPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlUploadPDFLayout.setVerticalGroup(
            pnlUploadPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUploadPDFLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUploadPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpdfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(19, 19, 19)
                .addGroup(pnlUploadPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtpdftopic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(btnaddPDF)
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Upload File", pnlUploadPDF);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtslidefileFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtslidefileFocusGained
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txtslidefileFocusGained

    private void txtslidefileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtslidefileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtslidefileActionPerformed

    private void txtslidefileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtslidefileMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txtslidefileMouseEntered

    private void txtslidefileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtslidefileMouseClicked
        // TODO add your handling code here:
 String directoryLabel="";
        String filenameLabel= "";
        String zfile="";
        JFileChooser jf = new JFileChooser();
        jf.setFileFilter(new FileNameExtensionFilter("Presentations (PPT format only)","ppt"));
         int status = jf.showOpenDialog(null);
if (status == JFileChooser.APPROVE_OPTION) {
File selectedFile = jf.getSelectedFile();
directoryLabel = selectedFile.getParent();
filenameLabel = selectedFile.getName();
zfile=filenameLabel;
ffile = directoryLabel+"/"+filenameLabel;
 txtslidefile.setText(zfile);
}
else if (status == JFileChooser.CANCEL_OPTION) {
directoryLabel=" ";
filenameLabel= " ";
}  

    }//GEN-LAST:event_txtslidefileMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if(showPane.equals("Slide"))
        {
            jTabbedPane1.setSelectedComponent(pnlSlideUpload);
            txtslidetopic.setText(usrInput);
        }
        else if(showPane.equals("pdf"))
        {
            jTabbedPane1.setSelectedComponent(pnlUploadPDF);
        }
    }//GEN-LAST:event_formWindowOpened

    private void txtpdfnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtpdfnameMouseClicked
        // TODO add your handling code here:
        String directoryLabel="";
        String filenameLabel= "";
        String zfile="";
        JFileChooser jf = new JFileChooser();
         int status = jf.showOpenDialog(null);
if (status == JFileChooser.APPROVE_OPTION) {
File selectedFile = jf.getSelectedFile();
directoryLabel = selectedFile.getParent();
filenameLabel = selectedFile.getName();
zfile=filenameLabel;
lffile = directoryLabel+"/"+filenameLabel;
 txtpdfname.setText(zfile);
}
else if (status == JFileChooser.CANCEL_OPTION) {
directoryLabel=" ";
filenameLabel= " ";
}  
    }//GEN-LAST:event_txtpdfnameMouseClicked

    private void btnaddSlideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddSlideActionPerformed
        try {
            // TODO add your handling code here:
            String zem=ffile;
            FileInputStream fis=null;
            File file = new File(zem);
             fis = new FileInputStream(file);
            String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
            String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
             String USER = "root";
            String PASS = "";
            String slidename=txtslidefile.getText();
            Connection conn = null;
             java.util.Date d=new java.util.Date();
             long sec=d.getTime();
             PreparedStatement stmt = null;
             //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER);
                
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               stmt = conn.prepareStatement("SET GLOBAL max_allowed_packet = 1024*1024*14;");
               stmt.execute();
               stmt=conn.prepareStatement("INSERT INTO slides_tbl(session,subtopic,slidename,slide) VALUES(?,?,?,?)");
               stmt.setString(1,session);
               stmt.setString(2,usrInput);
               stmt.setString(3, slidename);
               stmt.setBinaryStream(4, fis,(int)file.length());
               stmt.executeUpdate();
               stmt=conn.prepareStatement("update activetask_tbl set glbtime=? where task=? and session=?");
               stmt.setString(3,session);
               stmt.setLong(1,sec);
               stmt.setString(2,"slideupload");
               stmt.executeUpdate();
               JOptionPane.showMessageDialog(null,"Slide Uploaded Successfully");
               dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UploadDataFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UploadDataFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UploadDataFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnaddSlideActionPerformed

    private void btnaddPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddPDFActionPerformed
        // TODO add your handling code here:
                try {
            // TODO add your handling code here:
            String zem=lffile;
            FileInputStream fis=null;
            File file = new File(zem);
             fis = new FileInputStream(file);
            String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
            String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
             String USER = "root";
            String PASS = "";
            String pdfname=txtpdfname.getText();
            Connection conn = null;
            java.util.Date d=new java.util.Date();
             long sec=d.getTime();


             PreparedStatement stmt = null;
             //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER);
                
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               stmt = conn.prepareStatement("SET GLOBAL max_allowed_packet = 1024*1024*14;");
               stmt.execute();
               stmt=conn.prepareStatement("INSERT INTO pdfs_tbl(session,user_id,pdfname,pdf) VALUES(?,?,?,?)");
               stmt.setString(1,session);
               stmt.setString(2,userid);
               stmt.setString(3, pdfname);
               stmt.setBinaryStream(4, fis,(int)file.length());
               int x=stmt.executeUpdate();
               stmt=conn.prepareStatement("update activetask_tbl set glbtime=? where task=? and session=?");
               stmt.setString(3,session);
               stmt.setLong(1,sec);
               stmt.setString(2,"pdfupload");
               stmt.executeUpdate();
               JOptionPane.showMessageDialog(null,"File Uploaded Successfully");
               dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UploadDataFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UploadDataFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"File is too big to be uploaded to the server\nMaximum size allowed is 14 MB");
            txtpdfname.setText("");
            txtpdftopic.setText("");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UploadDataFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnaddPDFActionPerformed

    private void txtpdfnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpdfnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpdfnameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadDataFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new UploadDataFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaddPDF;
    private javax.swing.JButton btnaddSlide;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlSlideUpload;
    private javax.swing.JPanel pnlUploadPDF;
    private javax.swing.JTextField txtpdfname;
    private javax.swing.JTextField txtpdftopic;
    private javax.swing.JTextField txtslidefile;
    private javax.swing.JTextField txtslidetopic;
    // End of variables declaration//GEN-END:variables
}
