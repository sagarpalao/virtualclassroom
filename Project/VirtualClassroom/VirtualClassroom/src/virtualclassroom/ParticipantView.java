/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package virtualclassroom;

import java.awt.*;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.InetAddress;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.UnknownHostException;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import org.apache.poi.hslf.HSLFSlideShow;
import org.apache.poi.hslf.model.Slide;
import org.apache.poi.hslf.usermodel.SlideShow;
import org.apache.poi.xslf.XSLFSlideShow;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ASUS
 */
public class ParticipantView extends javax.swing.JFrame {

    /**
     * Creates new form ParticipantView
     */
    String ipxcc="";
    String userid="";
    String sessname="";
    String sldname="";
    int slideslength=0;
    public int glbcount=0;
    String task="";
    String webset="";
    String pollno="";
    String showpollno="";
    public ParticipantView(String userid,String ipxcc,String sessname)
    {
         initComponents();
        this.userid=userid;
        this.ipxcc=ipxcc;
        this.sessname=sessname;
        setLocationRelativeTo(null);
    }
    private ParticipantView() {
        throw new UnsupportedOperationException("Not yet implemented");

    }
    public String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }

        return null;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbgoptionSelect = new javax.swing.ButtonGroup();
        lblPicD = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeAgenda = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstAttendance = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        pollTab = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtqboxsw = new javax.swing.JTextField();
        optA = new javax.swing.JRadioButton();
        optB = new javax.swing.JRadioButton();
        optC = new javax.swing.JRadioButton();
        optD = new javax.swing.JRadioButton();
        cmdSubmitPoll = new javax.swing.JButton();
        jcbpollno = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        lblpollno = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jlPoll = new javax.swing.JList();
        btnResponse = new javax.swing.JButton();
        jcbshowpollno = new javax.swing.JComboBox();
        lblcorrectans = new javax.swing.JLabel();
        correctchecker = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listWeblinks = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstChatHistory = new javax.swing.JList();
        txtchatbox = new javax.swing.JTextField();
        btnSubmitReply = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        dwnldlst = new javax.swing.JList();
        jLabel11 = new javax.swing.JLabel();
        txtnamex = new javax.swing.JTextField();
        txtsessionname = new javax.swing.JTextField();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        pnlSlideViewers = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblslideShow = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        pnlCanvasx = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        lblCanvasPic = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtinqueue = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnhandsupREQ = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        curtask = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        curtask1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        txtlogout = new javax.swing.JMenu();
        mnulogin = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmnueditacc = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Participants Classroom");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        lblPicD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPicD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel3.setText("Name:");

        treeAgenda.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeAgenda.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeAgenda.setToolTipText("<html>Select a node to view presenattions related to it and load it in your system<br>\nIf no presentation is uploaded by presenter nothing will happen...");
        treeAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                treeAgendaMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                treeAgendaMousePressed(evt);
            }
        });
        treeAgenda.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {
            public void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {
            }
            public void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {
                treeAgendaTreeCollapsed(evt);
            }
        });
        treeAgenda.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                treeAgendaHierarchyChanged(evt);
            }
        });
        jScrollPane1.setViewportView(treeAgenda);

        lstAttendance.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lstAttendance.setToolTipText("List of your attended friends (participants)");
        jScrollPane2.setViewportView(lstAttendance);

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel7.setText("Attendance...");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel8.setText("Hands Up...");

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseEntered(evt);
            }
        });
        jTabbedPane1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseMoved(evt);
            }
        });

        pollTab.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        pollTab.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jPanel5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel5MouseMoved(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel12.setText("Poll No.:");

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel13.setText("Question:");

        txtqboxsw.setEditable(false);
        txtqboxsw.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        cbgoptionSelect.add(optA);
        optA.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        optA.setSelected(true);
        optA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optAActionPerformed(evt);
            }
        });

        cbgoptionSelect.add(optB);
        optB.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N

        cbgoptionSelect.add(optC);
        optC.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N

        cbgoptionSelect.add(optD);
        optD.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N

        cmdSubmitPoll.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cmdSubmitPoll.setText("Submit...");
        cmdSubmitPoll.setToolTipText("Click to submit...");
        cmdSubmitPoll.setEnabled(false);
        cmdSubmitPoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSubmitPollActionPerformed(evt);
            }
        });

        jcbpollno.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jcbpollno.setToolTipText("Select a poll to answer");
        jcbpollno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbpollnoItemStateChanged(evt);
            }
        });
        jcbpollno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbpollnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jcbpollno, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(optA, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                    .addComponent(optC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(optD, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(optB, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                                .addComponent(cmdSubmitPoll, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 131, Short.MAX_VALUE)
                        .addComponent(txtqboxsw, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jcbpollno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtqboxsw, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(optA)
                            .addComponent(optB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(optC)
                            .addComponent(optD)))
                    .addComponent(cmdSubmitPoll, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pollTab.addTab("Answer Poll", jPanel5);

        jPanel6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel6MouseMoved(evt);
            }
        });

        lblpollno.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblpollno.setText("Poll No.");

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel14.setText("Poll Answers");

        jlPoll.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jScrollPane6.setViewportView(jlPoll);

        btnResponse.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnResponse.setText("View Response");
        btnResponse.setToolTipText("Clcik to view response of all participants on ths poll");
        btnResponse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResponseActionPerformed(evt);
            }
        });

        jcbshowpollno.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jcbshowpollno.setToolTipText("Select a poll to view response");
        jcbshowpollno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbshowpollnoItemStateChanged(evt);
            }
        });
        jcbshowpollno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbshowpollnoActionPerformed(evt);
            }
        });

        lblcorrectans.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblcorrectans.setForeground(new java.awt.Color(0, 153, 0));

        correctchecker.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        correctchecker.setForeground(new java.awt.Color(0, 153, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblpollno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbshowpollno, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnResponse)
                            .addComponent(lblcorrectans, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(correctchecker, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblpollno)
                    .addComponent(jcbshowpollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcorrectans, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(0, 10, Short.MAX_VALUE))
                            .addComponent(correctchecker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnResponse))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pollTab.addTab("View Response", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pollTab)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pollTab)
        );

        jTabbedPane1.addTab("Poll", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/poll.jpg")), jPanel2); // NOI18N

        listWeblinks.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        listWeblinks.setToolTipText("Double click to open link in your browser");
        listWeblinks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listWeblinksMouseClicked(evt);
            }
        });
        listWeblinks.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                listWeblinksMouseMoved(evt);
            }
        });
        jScrollPane7.setViewportView(listWeblinks);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Web Links", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/weblink.jpg")), jPanel3); // NOI18N

        lstChatHistory.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lstChatHistory.setToolTipText("Your chat weblog with Presenter");
        lstChatHistory.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lstChatHistoryMouseMoved(evt);
            }
        });
        jScrollPane4.setViewportView(lstChatHistory);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        txtchatbox.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        btnSubmitReply.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnSubmitReply.setText("Submit");
        btnSubmitReply.setToolTipText("Send chat to Presenter");
        btnSubmitReply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitReplyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtchatbox, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSubmitReply, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtchatbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmitReply))
                .addGap(66, 66, 66))
        );

        jTabbedPane1.addTab("Chat", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/chat.jpg")), jPanel1); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI Semilight", 0, 22)); // NOI18N
        jLabel10.setText("Downloads...");

        dwnldlst.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        dwnldlst.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        dwnldlst.setToolTipText("Double click to download file to your system");
        dwnldlst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dwnldlstMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(dwnldlst);

        jLabel11.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel11.setText("Session Name:");

        txtnamex.setEditable(false);
        txtnamex.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N

        txtsessionname.setEditable(false);
        txtsessionname.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jTabbedPane3.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N

        pnlSlideViewers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlSlideViewersMouseEntered(evt);
            }
        });
        pnlSlideViewers.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlSlideViewersMouseMoved(evt);
            }
        });
        pnlSlideViewers.setLayout(null);

        lblslideShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblslideShowMouseEntered(evt);
            }
        });
        lblslideShow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblslideShowMouseMoved(evt);
            }
        });
        jScrollPane3.setViewportView(lblslideShow);

        pnlSlideViewers.add(jScrollPane3);
        jScrollPane3.setBounds(12, 13, 745, 340);

        jButton2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jButton2.setText("Load Slide..");
        jButton2.setToolTipText("Clcik to load presenation in your Viewer...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        pnlSlideViewers.add(jButton2);
        jButton2.setBounds(764, 13, 191, 39);

        jButton3.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jButton3.setText("<<");
        jButton3.setToolTipText("Previous");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        pnlSlideViewers.add(jButton3);
        jButton3.setBounds(764, 59, 86, 33);

        jButton4.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jButton4.setText(">>");
        jButton4.setToolTipText("Next");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        pnlSlideViewers.add(jButton4);
        jButton4.setBounds(868, 59, 87, 33);

        jTabbedPane3.addTab("Presentation", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/ppt.png")), pnlSlideViewers); // NOI18N

        lblCanvasPic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCanvasPic.setToolTipText("Board of classroom");
        lblCanvasPic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCanvasPicMouseEntered(evt);
            }
        });
        lblCanvasPic.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblCanvasPicMouseMoved(evt);
            }
        });
        jScrollPane8.setViewportView(lblCanvasPic);

        javax.swing.GroupLayout pnlCanvasxLayout = new javax.swing.GroupLayout(pnlCanvasx);
        pnlCanvasx.setLayout(pnlCanvasxLayout);
        pnlCanvasxLayout.setHorizontalGroup(
            pnlCanvasxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCanvasxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCanvasxLayout.setVerticalGroup(
            pnlCanvasxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCanvasxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("White Board", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/whiteboard.png")), pnlCanvasx); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel5.setText("In Queue...");

        txtinqueue.setEditable(false);
        txtinqueue.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtinqueue.setToolTipText("Your Position in Queue");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel2.setText("Agenda");

        btnhandsupREQ.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnhandsupREQ.setText("Raise Hand...");
        btnhandsupREQ.setToolTipText("<html>Click to raise hand<br>This will add in the Response queue<br>This gives you a chance to chat with Presenter");
        btnhandsupREQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhandsupREQActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 51, 255));
        jLabel4.setText("Profile...");

        curtask.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        curtask.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        curtask.setToolTipText("Recent Task");
        curtask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                curtaskMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel1.setText("<html>Click on the agenda topic<br> To Load ppt for the topic");

        curtask1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        curtask1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        curtask1.setToolTipText("Recent Task");
        curtask1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        curtask1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                curtask1MouseClicked(evt);
            }
        });

        txtlogout.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        mnulogin.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        mnulogin.setText("Logout");
        mnulogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuloginActionPerformed(evt);
            }
        });
        txtlogout.add(mnulogin);

        jMenuBar1.add(txtlogout);

        jMenu2.setText("Edit");
        jMenu2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jmnueditacc.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jmnueditacc.setText("Edit My Acc");
        jmnueditacc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnueditaccActionPerformed(evt);
            }
        });
        jMenu2.add(jmnueditacc);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Help");
        jMenu1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jMenuItem1.setText("Participant Help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem2.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblPicD, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(5, 5, 5)
                        .addComponent(txtnamex, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(41, 41, 41)
                        .addComponent(txtsessionname, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(curtask, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(curtask1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnhandsupREQ, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtinqueue, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel4)
                .addGap(46, 46, 46)
                .addComponent(lblPicD, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3))
                    .addComponent(txtnamex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtsessionname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(curtask, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(curtask1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel10)))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel7)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel8)
                .addGap(8, 8, 8)
                .addComponent(btnhandsupREQ, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addComponent(txtinqueue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
                               String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   //String ltp = (String)jcbaccfor.getSelectedItem();
   String sessionname="",topicname="",subtopic="";
   String tname="",branch="";
   String fname="",lname="";
 
   byte [] image = null;
    DefaultMutableTreeNode subtopicdfm[];
   int totcont=0;
  String acstr[];
   String substr[];

   //  Database credentials
   sessionname=sessname;
   topicname="";
   subtopic="";
   FileInputStream fis=null;   
   String USER = "root";
   String PASS = "";
   String gstr="";
   String agenuser="";
   Connection conn = null;
   PreparedStatement stmt = null;
   txtsessionname.setText(sessionname);
            try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               
               
               int count = 0;
               int countsub[];
               
               stmt = conn.prepareStatement("SELECT user_id FROM agenda_tbl WHERE session_name=?");
               stmt.setString(1,sessname);
               ResultSet rmx = stmt.executeQuery();
               while(rmx.next())
               {
                   agenuser=rmx.getString("user_id");
               }
               
               stmt=conn.prepareStatement("SELECT DISTINCT COUNT(topic) FROM agenda_tbl WHERE user_id=?");
               stmt.setString(1, agenuser);
               ResultSet rsx = stmt.executeQuery();
               while(rsx.next()) {
                   count=rsx.getInt("COUNT(topic)");
               }
               DefaultMutableTreeNode tcs = new DefaultMutableTreeNode(sessionname);
               DefaultMutableTreeNode topicdfm[]=new DefaultMutableTreeNode[count];
               //subtopicdfm=new DefaultMutableTreeNode[count];
               acstr = new String[count];
               stmt = conn.prepareStatement("SELECT DISTINCT topic FROM agenda_tbl WHERE user_id=? and session_name=?");
               stmt.setString(1,agenuser);
               stmt.setString(2,sessname);
               rsx=stmt.executeQuery();
               int ix=0;
               countsub = new int [count];
               while(rsx.next())
               {
                   acstr[ix]=rsx.getString("topic");
                   topicdfm[ix]=new DefaultMutableTreeNode(acstr[ix]);
                   tcs.add(topicdfm[ix]);
                   ix++;
               }
               
              for(int wex = 0; wex<count;wex++)
              {
                  stmt = conn.prepareStatement("SELECT DISTINCT COUNT(subtopic) FROM agenda_topic WHERE topic=?");
                  stmt.setString(1, acstr[wex]);
                  rsx=stmt.executeQuery();
                  while(rsx.next())
                  {
                      countsub[wex]=rsx.getInt("COUNT(subtopic)");
                  }
              }
               
              int l=0;
              for(int wex =0; wex<count;wex++)
              { 
               totcont = totcont+countsub[wex];
              }
              subtopicdfm = new DefaultMutableTreeNode[totcont];
              
              for(int wex =0; wex<count ; wex++)
              {
                  stmt = conn.prepareStatement("SELECT DISTINCT subtopic FROM agenda_topic WHERE topic=?");
                  stmt.setString(1,acstr[wex]);
                  rsx = stmt.executeQuery();
                  while(rsx.next())
                  {
                     gstr = rsx.getString("subtopic");
                     subtopicdfm[l]= new DefaultMutableTreeNode(gstr);
                     l++;
                  }
              }
              l=0;
              for(int wex =0; wex<count; wex++)
              {
                for(int j=0;j<countsub[wex];j++)
                {
                  topicdfm[wex].add(subtopicdfm[l]);
                  l++;
                }
              }
              DefaultTreeModel dtm = (DefaultTreeModel) treeAgenda.getModel();        
              dtm.setRoot(tcs);
                     
              
               
               
        stmt=conn.prepareStatement("SELECT * from partc_info WHERE user_id=?");
        stmt.setString(1, userid);
        ResultSet rs = stmt.executeQuery();      
        while(rs.next())
        {
         fname = rs.getString("first_name");
         lname = rs.getString("last_name");
         tname = fname+" "+lname;
         image = rs.getBytes("pic");
        }
        txtlogout.setText(tname);
        txtnamex.setText(tname);
        Image img = Toolkit.getDefaultToolkit().createImage(image);
            ImageIcon icon =new ImageIcon(img);
            lblPicD.setIcon(icon);
            
        DefaultListModel lstmodx = new DefaultListModel();
        String sfxstring="";
        stmt=conn.prepareStatement("SELECT user_id FROM loggedin_tbl where sessname=?");
        stmt.setString(1,sessname);
        rs=stmt.executeQuery();
        while(rs.next())
        {
            sfxstring=rs.getString("user_id");
            lstmodx.addElement(sfxstring);
        }
        lstAttendance.setModel(lstmodx);    
        String jfxstr="";
        DefaultListModel dwnldmodells = new DefaultListModel();
        stmt = conn.prepareStatement("SELECT filename FROM download_tbl where session=?");
        stmt.setString(1,sessname);
        stmt.executeQuery();
        while(rs.next())
        {
            jfxstr=rs.getString("filename");
            dwnldmodells.addElement(jfxstr);
        }
        dwnldlst.setModel(dwnldmodells);
        
        
        
        
              
            DefaultComboBoxModel dlmx = new DefaultComboBoxModel();
               stmt=conn.prepareStatement("SELECT pollno FROM mcqpoll_tbl where session=?");
               stmt.setString(1,sessname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                  String quesn=rs.getString("pollno");
                   dlmx.addElement(quesn);
               }
               jcbshowpollno.setModel(dlmx);
 
        stmt=conn.prepareStatement("SELECT topic FROM agenda_tbl WHERE session_name=?");
        stmt.setString(1,sessionname);
        
        
  /*
        while(rs.next())
        {
            topicname=rs.getString("topic");
        }
        
        stmt = conn.prepareStatement("SELECT subtopic FROM agenda_topic WHERE topic=?");
        stmt.setString(1,topicname);
               while(rs.next()){
                   subtopic = rs.getString("subtopic");
               }
               */
        
            }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try

    }//GEN-LAST:event_formWindowOpened

    private void optAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optAActionPerformed

    private void jmnueditaccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnueditaccActionPerformed
        // TODO add your handling code here:
        EditAccount eac = new EditAccount(userid,ipxcc);
        eac.setVisible(true);
    }//GEN-LAST:event_jmnueditaccActionPerformed

    private void treeAgendaTreeCollapsed(javax.swing.event.TreeExpansionEvent evt) {//GEN-FIRST:event_treeAgendaTreeCollapsed
        // TODO add your handling code here:
    }//GEN-LAST:event_treeAgendaTreeCollapsed

    private void treeAgendaHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_treeAgendaHierarchyChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_treeAgendaHierarchyChanged

    private void treeAgendaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeAgendaMousePressed
        // TODO add your handling code here:
      if (treeAgenda.isSelectionEmpty()) return;   
      TreePath path = treeAgenda.getSelectionPath();
      DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();
      Object userObject = selectedNode.getUserObject();
      String usrInput = userObject.toString();
               String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
      String sbtopic="";
   //  Database credentials
   FileInputStream fis=null;   
   String USER = "root";
   String PASS = "";
   Connection conn = null;
   PreparedStatement stmt = null;
   
               try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER);
                
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               
               //STEP 4: Execute a query
            stmt = conn.prepareStatement("SELECT * FROM slides_tbl WHERE subtopic=? and session=?");
            stmt.setString(1, usrInput);
            stmt.setString(2,sessname);
            ResultSet rs = stmt.executeQuery();
            while(rs.next())
            {
                sbtopic = rs.getString("subtopic");
            }
               
            if(sbtopic.equals(usrInput))
            {
                PSView psx = new PSView(usrInput,ipxcc,sessname);
                psx.setVisible(true);
            }
            }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try
     

    }//GEN-LAST:event_treeAgendaMousePressed

    private void mnuloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuloginActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
                   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
             String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
             String USER = "root";
             String PASS = "";
               Connection conn = null;
               PreparedStatement stmt = null;
              Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");  
              stmt = conn.prepareStatement("DELETE FROM loggedin_tbl WHERE user_id=? and sessname=?");
            stmt.setString(1, userid);
            stmt.setString(2,sessname);
            int x=stmt.executeUpdate();
            stmt = conn.prepareStatement("DELETE FROM handsup_tbl WHERE user_id=? and session=?");
            stmt.setString(1, userid);
            stmt.setString(2,sessname);
           stmt.executeUpdate();
           int cnt=0;
           stmt=conn.prepareStatement("select count(*) from loggedin_tbl where sessname=?");
           stmt.setString(1,sessname);
           ResultSet rs=stmt.executeQuery();
           while(rs.next()){
               cnt=rs.getInt(1);
           }
           if(cnt==0){
                stmt=conn.prepareStatement("delete from activetask_tbl where session=?");
               stmt.setString(1,sessname);
               stmt.executeUpdate();
           }
              
            if(x==1)
           {
               JOptionPane.showMessageDialog(null, userid + " Logged out successfully");
           }    
           else
           {
               JOptionPane.showMessageDialog(null, userid+" Logout failure\nTry Later...");
           }
            
           
           
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ProfessorSelectionForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ProfessorSelectionForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_mnuloginActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
           try {
            // TODO add your handling code here:
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   String strls="";

            Connection conn = null;
            String sfxstring="",lfxstrw="";
             DefaultListModel lstmodx = new DefaultListModel(); 
             Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement stmt=conn.prepareStatement("SELECT user_id FROM loggedin_tbl where sessname=?");
            stmt.setString(1,sessname);
            ResultSet rs=stmt.executeQuery();
            while(rs.next())
            {
                sfxstring=rs.getString("user_id");
                lstmodx.addElement(sfxstring);
            }
            lstAttendance.setModel(lstmodx);
           
            DefaultListModel lstmodza = new DefaultListModel();
            stmt = conn.prepareStatement("SELECT pdfname FROM pdfs_tbl where session=?");
            stmt.setString(1,sessname);
            rs=stmt.executeQuery();
            while(rs.next())
            {
               lfxstrw=rs.getString("pdfname");
               lstmodza.addElement(lfxstrw);
            }
            dwnldlst.setModel(lstmodza);
            
            DefaultComboBoxModel dcmb = new DefaultComboBoxModel();
             stmt = conn.prepareStatement("SELECT pollno FROM mcqpoll_tbl where session=?");
             stmt.setString(1,sessname);
            rs=stmt.executeQuery();
            while(rs.next())
            {
               lfxstrw=rs.getString("pollno");
               dcmb.addElement(lfxstrw);
            }
            jcbpollno.setModel(dcmb);
            jcbpollno.setSelectedItem(pollno);
               
            DefaultComboBoxModel dlmx = new DefaultComboBoxModel();
               stmt=conn.prepareStatement("SELECT pollno FROM mcqpoll_tbl where session=?");
               stmt.setString(1,sessname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                  String quesn=rs.getString("pollno");
                   dlmx.addElement(quesn);
               }
               jcbshowpollno.setModel(dlmx);
               jcbshowpollno.setSelectedItem(showpollno);
               
               DefaultListModel lstdefl=new DefaultListModel();
               stmt=conn.prepareStatement("SELECT * FROM weblinkstbl where session=?");
               stmt.setString(1,sessname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                   strls=rs.getString("weblink");
                   lstdefl.addElement(strls);
               }
               listWeblinks.setModel(lstdefl);
               
               String countwesw="";
               stmt=conn.prepareStatement("SELECT COUNT(*) FROM handsup_tbl where session=?");
               stmt.setString(1,sessname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                 countwesw=rs.getString("COUNT(*)");
               }
               txtinqueue.setText(countwesw);
               
               String sendr="",recvr="",msgs="",agenuser="";
               stmt = conn.prepareStatement("SELECT user_id FROM agenda_tbl WHERE session_name=?");
               stmt.setString(1,sessname);
               ResultSet rmx = stmt.executeQuery();
               while(rmx.next())
               {
                   agenuser=rmx.getString("user_id");
               }

               DefaultListModel dltchatfunc=new DefaultListModel();
              stmt=conn.prepareStatement("SELECT * FROM chatcon_tbl WHERE (sender=? AND receiver=?) OR (sender=? AND receiver=?) and session=?");
              stmt.setString(1, userid);
              stmt.setString(2, agenuser);
              stmt.setString(3, agenuser);
              stmt.setString(4, userid);
              stmt.setString(5,sessname);
              rmx=stmt.executeQuery();
              while(rmx.next())
              {
                  sendr=rmx.getString("sender");
                  recvr=rmx.getString("receiver");
                  msgs=rmx.getString("message");
                  dltchatfunc.addElement(sendr + " to " + recvr + " : "+msgs);
              }
              lstChatHistory.setModel(dltchatfunc);
         
            
         stmt=conn.prepareStatement("select glbtime from activetask_tbl where session=?");
         stmt.setString(1,sessname);
         rs=stmt.executeQuery();
         long maxtime=0;
         while(rs.next()){
             if(maxtime<=rs.getLong("glbtime")){
                 maxtime=rs.getLong("glbtime");
             }
         }
         stmt=conn.prepareStatement("select task from activetask_tbl where glbtime=? and session=?");
         stmt.setString(2,sessname);
         stmt.setLong(1,maxtime);
         rs=stmt.executeQuery();
         
         while(rs.next())
        {
            task=rs.getString("task");
        }
         System.out.println(task);
         if(task.equals("pdfupload")){
             String subtopic="";
                stmt=conn.prepareStatement("select pdfname from pdfs_tbl where session=?");
                stmt.setString(1,sessname);
                rs=stmt.executeQuery();
                while(rs.next()){
                    subtopic=rs.getString(1);
                }
             curtask.setText("New File Uploaded");
             curtask1.setText(subtopic);
             curtask.setForeground(Color.pink);
         }
         else if(task.equals("slideupload")){
                String subtopic="";
                stmt=conn.prepareStatement("select subtopic from slides_tbl where session=?");
                stmt.setString(1,sessname);
                rs=stmt.executeQuery();
                while(rs.next()){
                    subtopic=rs.getString(1);
                }
             curtask.setText("New Slide Uploaded");
             curtask1.setText(subtopic);
             curtask.setForeground(Color.black);
         }
         else if(task.equals("chat")){
             if(userid.equals(recvr)){
                curtask.setText("New Chat Made");
                curtask1.setText("");
                curtask.setForeground(Color.magenta);
             }
         }
         else if(task.equals("poll")){
             curtask.setText("New Poll Added");
             curtask1.setText("");
             curtask.setForeground(Color.red);
         }
         else if(task.equals("weblink")){
             curtask.setText("New Weblink Added");
             curtask1.setText("");
             curtask.setForeground(Color.green);
         }
         else if(task.equals("nothing")){
             curtask.setText("");
             curtask1.setText("");
             curtask.setForeground(Color.blue);
         }
         else if(task.equals("snap")){
             curtask.setText("New Snap Added");
             curtask1.setText("");
             curtask.setForeground(Color.orange);
         }
         else if(task.equals("logout")){
             JOptionPane.showMessageDialog(null,"Presenter has Logged out\nThe Session is Inactive");
             
             stmt=conn.prepareStatement("update activetask_tbl set glbtime=0 and session=?");
             stmt.setString(1,sessname);
               stmt.executeUpdate();
               stmt=conn.prepareStatement("update activetask_tbl set glbtime=1 where task=? and session=?");
               stmt.setString(1,"nothing");
               stmt.setString(2,sessname);
               stmt.executeUpdate();
         }
         
         byte[] image=null;     
         stmt=conn.prepareStatement("SELECT * from screenshots_tbl WHERE user_id=? and session=?");
         stmt.setString(2,sessname);
        stmt.setString(1, agenuser);
         rs = stmt.executeQuery(); 
         int cnt=0;
        while(rs.next())
        {
         cnt++;
         image = rs.getBytes("scrshot");
        }
        
        if(cnt==0){}
        else{
            Image img = Toolkit.getDefaultToolkit().createImage(image);
            ImageIcon icon =new ImageIcon(img);
            lblCanvasPic.setIcon(icon);
        }
        
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } 

    }//GEN-LAST:event_formMouseEntered

    private void btnhandsupREQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhandsupREQActionPerformed
        // TODO add your handling code here:
 try {
            // TODO add your handling code here:
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
            Connection conn = null;
            String sfxstring="";
             Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement stmt=conn.prepareStatement("INSERT INTO handsup_tbl(session,user_id,hostip) VALUES(?,?,?)");
            InetAddress inetx = InetAddress.getLocalHost();
            String ipman=inetx.toString();
            stmt.setString(1,sessname);
            stmt.setString(2, userid);
            stmt.setString(3, ipman);
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null,"Hand Raised!");
        } catch (UnknownHostException ex) {
            Logger.getLogger(ParticipantView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } 


    }//GEN-LAST:event_btnhandsupREQActionPerformed

    private void dwnldlstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dwnldlstMouseClicked
        // TODO add your handling code here:
        String strSel="";
        if (evt.getClickCount() == 2) 
        {
            strSel=(String)dwnldlst.getSelectedValue();
               String fldpth="";
    JFileChooser chooser = new JFileChooser();
    chooser.setCurrentDirectory(new java.io.File("."));
    chooser.setDialogTitle("Download File...");
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    chooser.setAcceptAllFileFilterUsed(false);

    if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
      System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
      System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
      fldpth=chooser.getSelectedFile().toString();
    } else {
      System.out.println("No Selection ");
      JOptionPane.showMessageDialog(null,"No option Selected");
      return;
    }
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
    byte[] fileDwn=null;
   FileInputStream fis=null;   
   FileOutputStream fos=null;
   File fsx = new File(fldpth+"/"+strSel);
   Connection conn = null;
   PreparedStatement stmt = null;
      try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               stmt=conn.prepareStatement("SELECT pdf FROM pdfs_tbl WHERE pdfname=? and session=?");
               stmt.setString(2,sessname);
               stmt.setString(1, strSel);
               ResultSet rs = stmt.executeQuery();
               while(rs.next())
               {
                   fileDwn=rs.getBytes("pdf");
               }
               fos = new FileOutputStream(fsx);
               fos.write(fileDwn);
               fos.close();
               JOptionPane.showMessageDialog(null,"File Downloaded Sucessfully!");
               }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
               JOptionPane.showMessageDialog(null,"Access is denied to the specified path...");
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try
   
   
        }
            

    }//GEN-LAST:event_dwnldlstMouseClicked

    private void jcbpollnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbpollnoActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jcbpollnoActionPerformed

    private void cmdSubmitPollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSubmitPollActionPerformed
        // TODO add your handling code here:
 
 String str="";
  if(optA.isSelected())
  {
      str="optA";
  }
  else if(optB.isSelected())
  {
      str="optB";
  }
  else if(optC.isSelected())
  {
      str="optC";
  }
  else if(optD.isSelected())
  {
      str="optD";
  }
  String jcbpollnox=jcbpollno.getSelectedItem().toString();
      String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   Connection conn = null;
   PreparedStatement stmt = null;
      try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               stmt=conn.prepareStatement("INSERT INTO studpolls(session,user_id,pollno,answer) VALUES(?,?,?,?)");
               stmt.setString(2, userid);
               stmt.setString(3, pollno);
               stmt.setString(4, str);
               stmt.setString(1,sessname);
               int x=stmt.executeUpdate();
              JOptionPane.showMessageDialog(null, "Poll Submitted successfully");
              cmdSubmitPoll.setEnabled(false);
              
      }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try
    }//GEN-LAST:event_cmdSubmitPollActionPerformed

    private void jcbshowpollnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbshowpollnoActionPerformed
        // TODO add your handling code here:
                 

    }//GEN-LAST:event_jcbshowpollnoActionPerformed

    private void jcbshowpollnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbshowpollnoItemStateChanged
        // TODO add your handling code here:
        String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   String questype="";
   String quesn="";
   int opt1=0,opt2=0,opt3=0,opt4=0;
   DefaultListModel dlm = new DefaultListModel();
   Connection conn = null;
   PreparedStatement stmt = null;
      try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
                String jcbpollnox=jcbshowpollno.getSelectedItem().toString();
                showpollno=jcbpollnox;
               stmt=conn.prepareStatement("SELECT polltype FROM mcqpoll_tbl WHERE pollno=? and session=?");
               stmt.setString(2,sessname);
               stmt.setString(1, jcbpollnox);
               ResultSet rs = stmt.executeQuery();
               while(rs.next())
               {
                  questype=rs.getString("polltype"); 
               }
              
               if(questype.equals("yno"))
               {
                   stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optA' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt1=rs.getInt("COUNT(*)");
                       dlm.addElement("A:"+opt1);
                   }
                    stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optB' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt2=rs.getInt("COUNT(*)");
                       dlm.addElement("B:"+opt2);
                   }
                   jlPoll.setModel(dlm);
               }
               else if(questype.equals("mcq"))
               {
                 stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optA' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt1=rs.getInt("COUNT(*)");
                       dlm.addElement("A:"+opt1);
                   }
                    stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optB' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt2=rs.getInt("COUNT(*)");
                       dlm.addElement("B:"+opt2);
                   }
                   stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optC' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt3=rs.getInt("COUNT(*)");
                       dlm.addElement("C:"+opt3);
                   }
                   stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optD' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt2=rs.getInt("COUNT(*)");
                       dlm.addElement("D:"+opt2);
                   }
                   jlPoll.setModel(dlm);  
               }
               stmt=conn.prepareStatement("select correct from mcqpoll_tbl where session=? and pollno=?");
               stmt.setString(1,sessname);
               stmt.setString(2,jcbpollnox);
               rs=stmt.executeQuery();
               String correctans=null;
               while(rs.next()){
                   correctans=rs.getString("correct");
               }
               stmt=conn.prepareStatement("select answer from studpolls where session=? and pollno=? and user_id=?");
               stmt.setString(1,sessname);
               stmt.setString(2,jcbpollnox);
               stmt.setString(3,userid);
               rs=stmt.executeQuery();
               String givenans=null;
               int cnt=0;
               while(rs.next()){
                   givenans=rs.getString("answer");
                   cnt++;
               }
               if(cnt==1){
                    lblcorrectans.setText("Correct Answer: "+correctans);
                    System.out.println(givenans);
                    if(correctans.equalsIgnoreCase(givenans)){
                        correctchecker.setText("Given Answer is Correct! ");
                        correctchecker.setForeground(Color.green);
                    }
                    else{
                        correctchecker.setText("Given Answer is Incorrect! ");
                        correctchecker.setForeground(Color.red); 
                    }
               }
               else{
                   correctchecker.setText("Not Answered Yet !");
                   correctchecker.setForeground(Color.red);
                   lblcorrectans.setText("");
               }
                  
      }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try
                
    }//GEN-LAST:event_jcbshowpollnoItemStateChanged

    private void btnResponseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResponseActionPerformed
        // TODO add your handling code here:
        String qstnx="";
        try {
            // TODO add your handling code here:
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   String qtype="";
   String optionA="",optionB="",optionC="",optionD="";
   int npols=0,opt1=0,opt2=0,opt3=0,opt4=0;
   String showpolx=showpollno;
            Connection conn = null;
            String sfxstring="";
             Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               
               
  PreparedStatement stmt=conn.prepareStatement("SELECT polltype FROM mcqpoll_tbl WHERE pollno=? and session=?");
  stmt.setString(2,sessname);
  stmt.setString(1, showpolx);
   ResultSet rs = stmt.executeQuery();
   while(rs.next())
   {
    qtype=rs.getString("polltype");   
   }
   
   if(qtype.equals("yno"))
   {
   stmt=conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? and session=?");
   stmt.setString(2,sessname);
  stmt.setString(1, showpolx);
   rs = stmt.executeQuery();
   while(rs.next())
   {
    npols=rs.getInt("COUNT(*)");   
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optA' and session=?");
   stmt.setString(2,sessname);
   stmt.setString(1, showpolx);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt1=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optB' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt2=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT * FROM mcqpoll_tbl WHERE pollno=? and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       qstnx=rs.getString("ques");
       optionA=rs.getString("optA");
       optionB=rs.getString("optB");
   }
   int p1=(int) ((opt1/(float)npols)*100); 
   int p2=(int) ((opt2/(float)npols)*100);
        DefaultPieDataset dpst =new DefaultPieDataset();
        dpst.setValue(optionA, p1);
        dpst.setValue(optionB, p2);
        PieChart demo = new PieChart("Poll Chart", qstnx,dpst);
          demo.pack();
          demo.setVisible(true);
   }
   
   else if(qtype.equals("mcq"))
   {
    stmt=conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? and session=?");
  stmt.setString(1, showpolx);
  stmt.setString(2,sessname);
   rs = stmt.executeQuery();
   while(rs.next())
   {
    npols=rs.getInt("COUNT(*)");   
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optA' and session=?");
   stmt.setString(1, showpolx);
    stmt.setString(2,sessname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt1=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optB' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt2=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optC' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt3=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optD' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt4=rs.getInt("COUNT(*)");
   }
   
    stmt = conn.prepareStatement("SELECT * FROM mcqpoll_tbl WHERE pollno=? and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       qstnx=rs.getString("ques");
       optionA=rs.getString("optA");
       optionB=rs.getString("optB");
       optionC=rs.getString("optC");
       optionD=rs.getString("optD");
   }
   int p1=(int) ((opt1/(float)npols)*100); 
   int p2=(int) ((opt2/(float)npols)*100);
   int p3=(int) ((opt3/(float)npols)*100);
   int p4=(int) ((opt4/(float)npols)*100);
        DefaultPieDataset dpst =new DefaultPieDataset();
        dpst.setValue(optionA, p1);
        dpst.setValue(optionB, p2);
        dpst.setValue(optionC, p3);
        dpst.setValue(optionD, p4);
        PieChart demo = new PieChart("Response of Poll "+jcbshowpollno.getSelectedItem().toString(),qstnx,dpst);
          demo.pack();
          demo.setLocationRelativeTo(null);
          demo.setVisible(true);
   }
   
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        }   
       
    }//GEN-LAST:event_btnResponseActionPerformed

    private void btnSubmitReplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitReplyActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Connection conn=null;
            PreparedStatement stmt=null;
             String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
             String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
             String USER = "root";
             String PASS = "";
             String strls="";
             String sendr="",recvr="",msgs="",agenuser="";
               Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);

                   stmt = conn.prepareStatement("SELECT user_id FROM agenda_tbl WHERE session_name=?");
                   stmt.setString(1,sessname);
                   ResultSet rmx = stmt.executeQuery();
                   while(rmx.next())
                   {
                       agenuser=rmx.getString("user_id");
                   }
                   String strlsw=txtchatbox.getText();
                   stmt=conn.prepareStatement("INSERT INTO chatcon_tbl(session,sender,receiver,message) VALUES(?,?,?,?)");
                   stmt.setString(1,sessname);
                  stmt.setString(2, userid);
                  stmt.setString(3, agenuser);
                  stmt.setString(4, strlsw);
                  stmt.executeUpdate();
                  
                   DefaultListModel dltchatfunc=new DefaultListModel();
                  stmt=conn.prepareStatement("SELECT * FROM chatcon_tbl WHERE ((sender=? AND receiver=?) OR (sender=? AND receiver=?)) and session=?");
                  stmt.setString(1, userid);
                  stmt.setString(2, agenuser);
                  stmt.setString(3, agenuser);
                  stmt.setString(4, userid);
                  stmt.setString(5,sessname);
                  rmx=stmt.executeQuery();
                  while(rmx.next())
                  {
                      sendr=rmx.getString("sender");
                      recvr=rmx.getString("receiver");
                      msgs=rmx.getString("message");
                      dltchatfunc.addElement(sendr + " to " + recvr + " : "+msgs);
                  }
                  lstChatHistory.setModel(dltchatfunc);
                  txtchatbox.setText("");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ParticipantView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ParticipantView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSubmitReplyActionPerformed
    
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        HelpParticipant hp=new HelpParticipant();
        hp.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        About a=new About();
        a.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void listWeblinksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listWeblinksMouseClicked
        // TODO add your handling code here:
        String url = "http://www.google.com";
        int x=evt.getClickCount();
        
        if(x==2)
        {
            url=listWeblinks.getSelectedValue().toString();
        if(Desktop.isDesktopSupported()){
            Desktop desktop = Desktop.getDesktop();
            try {
                try {
                    desktop.browse(new URI(url));
                } catch (URISyntaxException ex) {
                    Logger.getLogger(ParticipantView.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Invalid URL to be opened!");
                }
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,"Invalid URL to be opened!");
            }
        }else{
            Runtime runtime = Runtime.getRuntime();
            try {
                runtime.exec("xdg-open " + url);
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,"Invalid URL to be opened!");
            }
        }
        }
    }//GEN-LAST:event_listWeblinksMouseClicked

        private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
            String s = System.getenv("TEMP");
        int j = 0;
        String url = new String();
        while (j < s.length()) {
            if (s.charAt(j) == ';') {
                break;
            }
            char c = s.charAt(j);
            url = url + Character.toString(c);
            j++;
        }
        
        sldname = PSView.getSelectedFile();
        if(sldname.equals("")){
            JOptionPane.showMessageDialog(null,"First unpack the Presentation by selecting a agenda!");
        }
        else{
        FileInputStream inputStream=null;
        try {
            inputStream = new FileInputStream(url + "/" + sldname);
            SlideShow ppt = new SlideShow(inputStream);
            inputStream.close();
            java.awt.Dimension pgsize = ppt.getPageSize();
            //take first slide and save it as an image
            Slide slide[] = ppt.getSlides();
            BufferedImage img = new BufferedImage(pgsize.width, pgsize.height, BufferedImage.TYPE_INT_RGB);
            Graphics2D graphics = img.createGraphics();
            graphics.setPaint(Color.white);
            graphics.fill(new Rectangle2D.Float(0, 0, pgsize.width, pgsize.height));
            slideslength = slide.length;
            for (int i = 0; i < slide.length; i++) {
                FileOutputStream out = null;
                slide[i].draw(graphics);
                out = new FileOutputStream(url + "/" + sldname + i + ".png");
                javax.imageio.ImageIO.write(img, "png", out);
            }
        } catch (IOException ex) {
            Logger.getLogger(Silkahn.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                inputStream.close();
            } catch (IOException ex) {
                Logger.getLogger(Silkahn.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        glbcount = 0;
        ImageIcon ico = new ImageIcon(url + "/" + sldname + glbcount + ".png");
        lblslideShow.setIcon(ico);
        this.jButton3.setEnabled(true);
        this.jButton4.setEnabled(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String s = System.getenv("TEMP");
        int j = 0;
        String value = new String();
        while (j < s.length()) {
            if (s.charAt(j) == ';') {
                break;
            }
            char c = s.charAt(j);
            value = value + Character.toString(c);
            j++;
        }
        if (glbcount == 0) {
            glbcount = slideslength - 1;
            ImageIcon ico = new ImageIcon(value + "/" + sldname + glbcount + ".png");
            lblslideShow.setIcon(ico);
            System.out.println(glbcount);
        } else if (glbcount >= 0) {
            glbcount--;
            ImageIcon ico = new ImageIcon(value + "/" + sldname + glbcount + ".png");
            lblslideShow.setIcon(ico);
            System.out.println(glbcount);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String s = System.getenv("TEMP");
        int j = 0;
        String value = new String();
        while (j <s.length()) {
            if (s.charAt(j) == ';') {
                break;
            }
            char c = s.charAt(j);
            value = value + Character.toString(c);
            j++;
        }
        if (glbcount == slideslength - 1) {
            glbcount = 0;
            ImageIcon ico = new ImageIcon(value + "/" + sldname + glbcount + ".png");
            lblslideShow.setIcon(ico);
        } else if (glbcount < slideslength - 1) {
            glbcount++;
            ImageIcon ico = new ImageIcon(value + "/" + sldname + glbcount + ".png");
            lblslideShow.setIcon(ico);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void lblslideShowMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblslideShowMouseEntered
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_lblslideShowMouseEntered

    private void pnlSlideViewersMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSlideViewersMouseEntered
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_pnlSlideViewersMouseEntered

    private void lblCanvasPicMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCanvasPicMouseEntered
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_lblCanvasPicMouseEntered

    private void curtaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_curtaskMouseClicked
        // TODO add your handling code here:
        curtask.setForeground(Color.black);
    }//GEN-LAST:event_curtaskMouseClicked

    private void curtask1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_curtask1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_curtask1MouseClicked

    private void jTabbedPane1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseEntered
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jTabbedPane1MouseEntered

    private void lblCanvasPicMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCanvasPicMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_lblCanvasPicMouseMoved

    private void treeAgendaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeAgendaMouseEntered
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_treeAgendaMouseEntered

    private void jTabbedPane1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jTabbedPane1MouseMoved

    private void pnlSlideViewersMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlSlideViewersMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_pnlSlideViewersMouseMoved

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_formMouseMoved

    private void lblslideShowMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblslideShowMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_lblslideShowMouseMoved

    private void jPanel5MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jPanel5MouseMoved

    private void jPanel6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jPanel6MouseMoved

    private void listWeblinksMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listWeblinksMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_listWeblinksMouseMoved

    private void lstChatHistoryMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstChatHistoryMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_lstChatHistoryMouseMoved

    private void jcbpollnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbpollnoItemStateChanged
        // TODO add your handling code here:
        String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   String questype="";
   String quesn="";
   String opt1="",opt2="",opt3="",opt4="";
   String jcbpollnox=jcbpollno.getSelectedItem().toString();
   pollno=jcbpollnox;
   Connection conn = null;
   PreparedStatement stmt = null;
      try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               stmt=conn.prepareStatement("SELECT polltype FROM mcqpoll_tbl WHERE pollno=? and session=?");
               stmt.setString(2,sessname);
               stmt.setString(1, jcbpollnox);
               ResultSet rs = stmt.executeQuery();
               while(rs.next())
               {
                  questype=rs.getString("polltype");
               }
              
               if(questype.equals("yno"))
               {
                   optC.setVisible(false);
                   optC.setEnabled(false);
                   optD.setVisible(false);
                   optD.setEnabled(false);
                    stmt=conn.prepareStatement("SELECT ques,optA,optB FROM mcqpoll_tbl WHERE pollno=? and session=?");
                    stmt.setString(2,sessname);
               stmt.setString(1, jcbpollnox);
               rs = stmt.executeQuery();
               while(rs.next())
                 {
                     quesn=rs.getString("ques");
                     opt1=rs.getString("optA");
                     opt2=rs.getString("optB");
                 }
                txtqboxsw.setText(quesn);
                optA.setText(opt1);
                optB.setText(opt2);
               }
               else if(questype.equals("mcq"))
               {
                    optC.setVisible(true);
                   optC.setEnabled(true);
                   optD.setVisible(true);
                   optD.setEnabled(true);
                        stmt=conn.prepareStatement("SELECT ques,optA,optB,optC,optD FROM mcqpoll_tbl WHERE pollno=? and session=?");
                        stmt.setString(2,sessname);
               stmt.setString(1, jcbpollnox);
               rs = stmt.executeQuery();
               while(rs.next())
                 {
                     quesn=rs.getString("ques");
                     opt1=rs.getString("optA");
                     opt2=rs.getString("optB");
                     opt3=rs.getString("optC");
                     opt4=rs.getString("optD");
                 }
                txtqboxsw.setText(quesn);
                optA.setText(opt1);
                optB.setText(opt2);
                optC.setText(opt3);
                optD.setText(opt4);
               }
               
               stmt=conn.prepareStatement("select count(*) from studpolls where session=? and user_id=? and pollno=?");
               stmt.setString(1,sessname);
               stmt.setString(2,userid);
               stmt.setString(3,jcbpollno.getSelectedItem().toString());
               rs=stmt.executeQuery();
               int cnt=0;
               while(rs.next()){
                  cnt=rs.getInt("count(*)"); 
               }
               System.out.println("Count: "+cnt);
               if(cnt==0){
                   this.cmdSubmitPoll.setEnabled(true);
               }
               else
                   this.cmdSubmitPoll.setEnabled(false);
               }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try
    }//GEN-LAST:event_jcbpollnoItemStateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
       
       
       
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ParticipantView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ParticipantView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ParticipantView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ParticipantView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new ParticipantView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResponse;
    private javax.swing.JButton btnSubmitReply;
    private javax.swing.JButton btnhandsupREQ;
    private javax.swing.ButtonGroup cbgoptionSelect;
    private javax.swing.JButton cmdSubmitPoll;
    private javax.swing.JLabel correctchecker;
    private javax.swing.JLabel curtask;
    private javax.swing.JLabel curtask1;
    private javax.swing.JList dwnldlst;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JComboBox jcbpollno;
    private javax.swing.JComboBox jcbshowpollno;
    private javax.swing.JList jlPoll;
    private javax.swing.JMenuItem jmnueditacc;
    private javax.swing.JLabel lblCanvasPic;
    private javax.swing.JLabel lblPicD;
    private javax.swing.JLabel lblcorrectans;
    private javax.swing.JLabel lblpollno;
    private javax.swing.JLabel lblslideShow;
    private javax.swing.JList listWeblinks;
    private javax.swing.JList lstAttendance;
    private javax.swing.JList lstChatHistory;
    private javax.swing.JMenuItem mnulogin;
    private javax.swing.JRadioButton optA;
    private javax.swing.JRadioButton optB;
    private javax.swing.JRadioButton optC;
    private javax.swing.JRadioButton optD;
    private javax.swing.JPanel pnlCanvasx;
    private javax.swing.JPanel pnlSlideViewers;
    private javax.swing.JTabbedPane pollTab;
    private javax.swing.JTree treeAgenda;
    private javax.swing.JTextField txtchatbox;
    private javax.swing.JTextField txtinqueue;
    private javax.swing.JMenu txtlogout;
    private javax.swing.JTextField txtnamex;
    private javax.swing.JTextField txtqboxsw;
    private javax.swing.JTextField txtsessionname;
    // End of variables declaration//GEN-END:variables
}
