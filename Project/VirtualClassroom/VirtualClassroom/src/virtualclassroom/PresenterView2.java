/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package virtualclassroom;

import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ASUS
 */
public class PresenterView2 extends javax.swing.JFrame {

    /**
     * Creates new form PresenterView2
     */
    String userid="";
    String ipxcc="";
    String sessionname="";
    String setSenderNow="";
    String websel="";
    String showpollno="";
DefaultListModel dmod = new DefaultListModel();
 
    public PresenterView2(String userid, String ipxcc, String sessionnamex) {
        initComponents();
        this.ipxcc=ipxcc;
        this.userid=userid;
        this.sessionname=sessionnamex;
        setLocationRelativeTo(null);
    }
    public PresenterView2() {
        initComponents();
       setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbgPolluxTroy = new javax.swing.ButtonGroup();
        txtspecialistx = new javax.swing.JTextField();
        txtprofex = new javax.swing.JTextField();
        txtnamex = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listHandsUp = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstAttendance = new javax.swing.JList();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtquestion = new javax.swing.JTextField();
        radioyesno = new javax.swing.JRadioButton();
        radiomcq = new javax.swing.JRadioButton();
        btnAddPoll = new javax.swing.JButton();
        txtsetpollno = new javax.swing.JTextField();
        txtoptA = new javax.swing.JTextField();
        txtoptB = new javax.swing.JTextField();
        txtoptC = new javax.swing.JTextField();
        txtoptD = new javax.swing.JTextField();
        jcbsetAns = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblpollno = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jlPoll = new javax.swing.JList();
        btnResponse = new javax.swing.JButton();
        jcbshowpollno = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        listWeblinks = new javax.swing.JList();
        txtweblink = new javax.swing.JTextField();
        cmdaddlink = new javax.swing.JButton();
        cmddellink = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstChatHistory = new javax.swing.JList();
        txtchatbox = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblpicd = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        drawingPanelPresenter = new javax.swing.JPanel();
        canvasHD = new javax.swing.JInternalFrame();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstUpldlist = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        txtsessionname = new javax.swing.JTextField();
        btnUploadFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeAgenda = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        currentpartc = new javax.swing.JLabel();
        lblattensw = new javax.swing.JLabel();
        lblinqueue1 = new javax.swing.JLabel();
        btnsndCnv = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Presenters Classroom");
        setAutoRequestFocus(false);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        txtspecialistx.setEditable(false);
        txtspecialistx.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N

        txtprofex.setEditable(false);
        txtprofex.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N

        txtnamex.setEditable(false);
        txtnamex.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel11.setText("Session Name:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel8.setText("Hands Up...");

        listHandsUp.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        listHandsUp.setToolTipText("Double click to give response to the Participant");
        listHandsUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listHandsUpMouseClicked(evt);
            }
        });
        listHandsUp.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                listHandsUpComponentHidden(evt);
            }
        });
        jScrollPane3.setViewportView(listHandsUp);

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel7.setText("Attendance...");

        lstAttendance.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lstAttendance.setToolTipText("List of Participants attendance");
        lstAttendance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstAttendanceMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstAttendance);

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseEntered(evt);
            }
        });
        jTabbedPane1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseMoved(evt);
            }
        });

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jPanel5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel5MouseMoved(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel12.setText("Poll No.:");

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel13.setText("Question:");

        txtquestion.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        cbgPolluxTroy.add(radioyesno);
        radioyesno.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        radioyesno.setText("Yes/No");
        radioyesno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioyesnoActionPerformed(evt);
            }
        });

        cbgPolluxTroy.add(radiomcq);
        radiomcq.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        radiomcq.setSelected(true);
        radiomcq.setText("Multiple Choice Questions");
        radiomcq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiomcqActionPerformed(evt);
            }
        });

        btnAddPoll.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnAddPoll.setText("Add Poll");
        btnAddPoll.setToolTipText("Click to add a new poll for Participants");
        btnAddPoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPollActionPerformed(evt);
            }
        });

        txtsetpollno.setEditable(false);
        txtsetpollno.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        txtoptA.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        txtoptB.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        txtoptC.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        txtoptD.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jcbsetAns.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jcbsetAns.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OptA", "OptB", "OptC", "OptD" }));
        jcbsetAns.setToolTipText("Select correct Answer");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel2.setText("Answer:");

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel9.setText("A)");

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel15.setText("C)");

        jLabel17.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel17.setText("D)");

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel16.setText("B)");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioyesno, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txtsetpollno, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtquestion)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(radiomcq)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel15))
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtoptA, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                            .addComponent(txtoptC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtoptD))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtoptB, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbsetAns, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAddPoll, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(268, 268, 268))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtsetpollno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtquestion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioyesno)
                    .addComponent(txtoptA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtoptB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbsetAns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiomcq)
                    .addComponent(txtoptC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtoptD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddPoll)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17)))
        );

        jTabbedPane2.addTab("Create Poll", jPanel5);

        jPanel6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel6MouseMoved(evt);
            }
        });

        lblpollno.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblpollno.setText("Poll No.");

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel14.setText("Poll");

        jlPoll.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jScrollPane6.setViewportView(jlPoll);

        btnResponse.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnResponse.setText("View Response");
        btnResponse.setToolTipText("Click to view response for the selected poll");
        btnResponse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResponseActionPerformed(evt);
            }
        });

        jcbshowpollno.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jcbshowpollno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jcbshowpollno.setToolTipText("Select poll no to view response for");
        jcbshowpollno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbshowpollnoItemStateChanged(evt);
            }
        });
        jcbshowpollno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbshowpollnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblpollno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbshowpollno, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnResponse)))
                .addContainerGap(343, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblpollno)
                    .addComponent(jcbshowpollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnResponse))))
        );

        jTabbedPane2.addTab("View Response", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Poll", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/poll.jpg")), jPanel2); // NOI18N

        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel3MouseMoved(evt);
            }
        });

        listWeblinks.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        listWeblinks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listWeblinks.setToolTipText("List of uploaded weblinks");
        listWeblinks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listWeblinksMouseClicked(evt);
            }
        });
        listWeblinks.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                listWeblinksMouseMoved(evt);
            }
        });
        jScrollPane7.setViewportView(listWeblinks);

        txtweblink.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        cmdaddlink.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cmdaddlink.setText("Add..");
        cmdaddlink.setToolTipText("Click to add");
        cmdaddlink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdaddlinkActionPerformed(evt);
            }
        });

        cmddellink.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        cmddellink.setText("Delete..");
        cmddellink.setToolTipText("Click to remove selected weblink");
        cmddellink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmddellinkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txtweblink)
                        .addGap(18, 18, 18)
                        .addComponent(cmdaddlink)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmddellink)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtweblink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdaddlink)
                    .addComponent(cmddellink))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Web Links", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/weblink.jpg")), jPanel3); // NOI18N

        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });

        lstChatHistory.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lstChatHistory.setToolTipText("Chat web log with multiple participants");
        lstChatHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lstChatHistoryMouseEntered(evt);
            }
        });
        lstChatHistory.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lstChatHistoryMouseMoved(evt);
            }
        });
        jScrollPane4.setViewportView(lstChatHistory);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        txtchatbox.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtchatbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtchatboxActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jButton1.setText("Submit");
        jButton1.setToolTipText("Submit chat to the Participant being currently responded");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtchatbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtchatbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("Chat", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/chat.jpg")), jPanel1); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel4.setText("Profession");

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel3.setText("Name:");

        lblpicd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblpicd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTabbedPane3.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N

        drawingPanelPresenter.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        drawingPanelPresenter.setLayout(null);

        canvasHD.setToolTipText("Drrag to draw");
        canvasHD.setVisible(true);
        canvasHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvasHDMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                canvasHDMouseEntered(evt);
            }
        });
        canvasHD.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                canvasHDMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout canvasHDLayout = new javax.swing.GroupLayout(canvasHD.getContentPane());
        canvasHD.getContentPane().setLayout(canvasHDLayout);
        canvasHDLayout.setHorizontalGroup(
            canvasHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 904, Short.MAX_VALUE)
        );
        canvasHDLayout.setVerticalGroup(
            canvasHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 305, Short.MAX_VALUE)
        );

        drawingPanelPresenter.add(canvasHD);
        canvasHD.setBounds(0, 0, 920, 339);

        jTabbedPane3.addTab("White Board", new javax.swing.ImageIcon(getClass().getResource("/virtualclassroom/whiteboard.png")), drawingPanelPresenter); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel10.setText("Uploads...");

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel6.setText("Agenda");

        lstUpldlist.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lstUpldlist.setToolTipText("List of uploaded Files (PDFs,docs,ppts,images,music....)");
        jScrollPane5.setViewportView(lstUpldlist);

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel5.setText("Specialist");

        txtsessionname.setEditable(false);
        txtsessionname.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtsessionname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsessionnameActionPerformed(evt);
            }
        });

        btnUploadFile.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnUploadFile.setText("Upload");
        btnUploadFile.setToolTipText("Click to upload File accessible by Participants");
        btnUploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadFileActionPerformed(evt);
            }
        });

        treeAgenda.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeAgenda.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        treeAgenda.setToolTipText("<html>Click on a node to upload a presentation for that node<br>\nThis presentation iis accessible to Participants");
        treeAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                treeAgendaMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                treeAgendaMousePressed(evt);
            }
        });
        treeAgenda.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeAgendaValueChanged(evt);
            }
        });
        treeAgenda.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                treeAgendaMouseMoved(evt);
            }
        });
        jScrollPane1.setViewportView(treeAgenda);

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 51, 255));
        jLabel1.setText("Profile...");

        currentpartc.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        currentpartc.setToolTipText("Participant who is currently being responded");

        lblattensw.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblattensw.setToolTipText("No of Participants attended");
        lblattensw.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblattensw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblattenswMouseClicked(evt);
            }
        });

        lblinqueue1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblinqueue1.setToolTipText("No. of Participants in queue");

        btnsndCnv.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnsndCnv.setToolTipText("Click to send a snap of whiteboard to all participants");
        btnsndCnv.setActionCommand("Send WhiteBoard...");
        btnsndCnv.setLabel("Send Snap...");
        btnsndCnv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsndCnvActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel18.setText("<html>Click on the agenda sub topics<br>\nto upload ppt for the topic...");

        jMenu1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jMenuItem3.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jMenuItem3.setText("Logout");
        jMenuItem3.setToolTipText("");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jMenuItem1.setText(" Presenters Help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);
        jMenu2.add(jSeparator1);

        jMenuItem2.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        jMenuItem2.setText("About");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4))
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(txtnamex, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(txtprofex, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblpicd, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(956, 956, 956)
                        .addComponent(btnsndCnv, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(txtsessionname, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(txtspecialistx, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnUploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblattensw, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentpartc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblinqueue1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(248, 248, 248)
                        .addComponent(jLabel5)
                        .addGap(71, 71, 71)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(627, 627, 627)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(txtnamex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(txtprofex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(lblpicd, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(btnsndCnv))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(txtsessionname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(txtspecialistx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(444, 444, 444)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel10)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(btnUploadFile)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addGap(3, 3, 3)
                .addComponent(lblattensw, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(currentpartc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(lblinqueue1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public static class SimplePaintPanel extends JPanel
               implements MouseListener, MouseMotionListener,KeyListener {
      private final static int BLACK = 0,
                        RED = 1,     
                        GREEN = 2,   
                        BLUE = 3, 
                        CYAN = 4,   
                        MAGENTA = 5,
                        YELLOW = 6;
      
      private int currentColor = BLACK;  
      
      private int prevX, prevY;     
      
      private boolean dragging;     
      
      private Graphics graphicsForDrawing; 
      
      int x=15;
      int y=15;
      
      SimplePaintPanel() {
         setBackground(Color.WHITE);
         addMouseListener(this);
         addMouseMotionListener(this);
         addKeyListener(this);
      }
      
            
     public void paintComponent(Graphics g) {
         
         super.paintComponent(g); 
         
         
         int width = getWidth();   
         int height = getHeight();  
         
         int colorSpacing = (height - 56) / 7;
            
         
         g.setColor(Color.GRAY);
         g.drawRect(0, 0, width-1, height-1);
         g.drawRect(1, 1, width-3, height-3);
         g.drawRect(2, 2, width-5, height-5);
         
                  
         g.fillRect(width - 56, 0, 56, height);
         
         
         g.setColor(Color.WHITE);
         g.fillRect(width-53,  height-53, 50, 50);
         g.setColor(Color.BLACK);
         g.drawRect(width-53, height-53, 49, 49);
         g.drawString("CLEAR", width-48, height-23); 
         
         
         g.setColor(Color.BLACK);
         g.fillRect(width-53, 3 + 0*colorSpacing, 50, colorSpacing-3);
         g.setColor(Color.RED);
         g.fillRect(width-53, 3 + 1*colorSpacing, 50, colorSpacing-3);
         g.setColor(Color.GREEN);
         g.fillRect(width-53, 3 + 2*colorSpacing, 50, colorSpacing-3);
         g.setColor(Color.BLUE);
         g.fillRect(width-53, 3 + 3*colorSpacing, 50, colorSpacing-3);
         g.setColor(Color.CYAN);
         g.fillRect(width-53, 3 + 4*colorSpacing, 50, colorSpacing-3);
         g.setColor(Color.MAGENTA);
         g.fillRect(width-53, 3 + 5*colorSpacing, 50, colorSpacing-3);
         g.setColor(Color.YELLOW);
         g.fillRect(width-53, 3 + 6*colorSpacing, 50, colorSpacing-3);
         
                  
         g.setColor(Color.WHITE);
         g.drawRect(width-55, 1 + currentColor*colorSpacing, 53, colorSpacing);
         g.drawRect(width-54, 2 + currentColor*colorSpacing, 51, colorSpacing-2);
         
      } 
      
      
      private void changeColor(int y) {
         
         int width = getWidth();           // Width of applet.
         int height = getHeight();         // Height of applet.
         int colorSpacing = (height - 56) / 7;  // Space for one color rectangle.
         int newColor = y / colorSpacing;       // Which color number was clicked?
         
         if (newColor < 0 || newColor > 6)      // Make sure the color number is valid.
            return;
         
          
         Graphics g = getGraphics();
         g.setColor(Color.GRAY);
         g.drawRect(width-55, 1 + currentColor*colorSpacing, 53, colorSpacing);
         g.drawRect(width-54, 2 + currentColor*colorSpacing, 51, colorSpacing-2);
         currentColor = newColor;
         g.setColor(Color.WHITE);
         g.drawRect(width-55, 1 + currentColor*colorSpacing, 53, colorSpacing);
         g.drawRect(width-54, 2 + currentColor*colorSpacing, 51, colorSpacing-2);
         g.dispose();
         
      } // end changeColor()
      
      
            private void setUpDrawingGraphics() {
         graphicsForDrawing = getGraphics();
         switch (currentColor) {
         case BLACK:
            graphicsForDrawing.setColor(Color.BLACK);
            break;
         case RED:
            graphicsForDrawing.setColor(Color.RED);
            break;
         case GREEN:
            graphicsForDrawing.setColor(Color.GREEN);
            break;
         case BLUE:
            graphicsForDrawing.setColor(Color.BLUE);
            break;
         case CYAN:
            graphicsForDrawing.setColor(Color.CYAN);
            break;
         case MAGENTA:
            graphicsForDrawing.setColor(Color.MAGENTA);
            break;
         case YELLOW:
            graphicsForDrawing.setColor(Color.YELLOW);
            break;
         }
      } // end setUpDrawingGraphics()
      
      
      public void mousePressed(MouseEvent evt) {
          System.out.println("PRessed..");
         
         int x = evt.getX();   // x-coordinate where the user clicked.
         int y = evt.getY();   // y-coordinate where the user clicked.
         
         int width = getWidth();    // Width of the panel.
         int height = getHeight();  // Height of the panel.
         
         if (dragging == true)  // Ignore mouse presses that occur
            return;            //    when user is already drawing a curve.
                                //    (This can happen if the user presses
                                //    two mouse buttons at the same time.)
         
         if (x > width - 53) {
                  if (y > height - 53){
               repaint();
               this.x=15;
               this.y=15;
              }//  Clicked on "CLEAR button".
            else
               changeColor(y);  // Clicked on the color palette.
         }
         else if (x > 3 && x < width - 56 && y > 3 && y < height - 3) {
                  prevX = x;
            prevY = y;
            dragging = true;
            setUpDrawingGraphics();
         }
         
      } // end mousePressed()
      
      
         public void mouseReleased(MouseEvent evt) {
         if (dragging == false)
            return;  // Nothing to do because the user isn't drawing.
         dragging = false;
         graphicsForDrawing.dispose();
         graphicsForDrawing = null;
      }
      
      
            public void mouseDragged(MouseEvent evt) {
         
         if (dragging == false)
            return;  // Nothing to do because the user isn't drawing.
         
         int x = evt.getX();   // x-coordinate of mouse.
         int y = evt.getY();   // y-coordinate of mouse.
         
         if (x < 3)                          
            x = 3;                           
         if (x > getWidth() - 57)       
            x = getWidth() - 57;
         
         if (y < 3)                     
            y = 3;                      
         if (y > getHeight() - 4)       
            y = getHeight() - 4;
         
         graphicsForDrawing.drawLine(prevX, prevY, x, y);  
         
         prevX = x;  
         prevY = y;
         
      } // end mouseDragged()
      
      
      public void mouseEntered(MouseEvent evt) { }   
      public void mouseExited(MouseEvent evt) { }    
      public void mouseClicked(MouseEvent evt) { }   
      public void mouseMoved(MouseEvent evt) { }     
      public void keyPressed(KeyEvent e)
      {
          int code=e.getKeyCode();
          if(code==KeyEvent.VK_ENTER){
              y=y+15;
              x=0;
          }
          else if(code==KeyEvent.VK_BACK_SPACE){
              this.repaint(x,y-15,15,15);
              if(x<=15){
              }
              else{
                x=x-30;
              }
          }

      }
      
      public void keyReleased(KeyEvent e){}
      public void keyTyped(KeyEvent e){
          System.out.println("Typed...");
            x=x+15;
            y=y;
            if(x>800){
                x=15;
                y=y+15;
            }
          if(y>280){
              
          }
          else{
              char c=e.getKeyChar();
              setUpDrawingGraphics();
              graphicsForDrawing.drawString(String.valueOf(c),x,y);
          }
      }  // End class SimplePaintPanel
 }
 
 
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   //String ltp = (String)jcbaccfor.getSelectedItem();
   byte[] image = null;
   
   String topicname="",subtopic="";
   String fname="",lname="",tname="";
   String acstr[];
   String substr[];
   String age,phno,usid,paswd,cnfpaswd,branch,profession="",specialist="";
   DefaultMutableTreeNode subtopicdfm[];
   int totcont=0;
   canvasHD.setContentPane(new SimplePaintPanel()); 
   //  Database credentials
   
   topicname="";
   subtopic="";
   FileInputStream fis=null;   
   String USER = "root";
   String PASS = "";
   String gstr="";
   Connection conn = null;
   PreparedStatement stmt = null;
   
            try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               jMenu1.setText(userid);
               int count = 0;
               int countsub[];
               stmt=conn.prepareStatement("SELECT DISTINCT COUNT(topic) FROM agenda_tbl WHERE user_id=?");
               stmt.setString(1, userid);
               ResultSet rsx = stmt.executeQuery();
               while(rsx.next()) {
                   count=rsx.getInt("COUNT(topic)");
               }
               DefaultMutableTreeNode tcs = new DefaultMutableTreeNode(sessionname);
               DefaultMutableTreeNode topicdfm[]=new DefaultMutableTreeNode[count];
               //subtopicdfm=new DefaultMutableTreeNode[count];
               acstr = new String[count];
               stmt = conn.prepareStatement("SELECT DISTINCT topic FROM agenda_tbl WHERE user_id=? and session_name=? ");
               stmt.setString(1,userid);
               stmt.setString(2,sessionname);
               rsx=stmt.executeQuery();
               int ix=0;
               countsub = new int [count];
               while(rsx.next())
               {
                   acstr[ix]=rsx.getString("topic");
                   topicdfm[ix]=new DefaultMutableTreeNode(acstr[ix]);
                   tcs.add(topicdfm[ix]);
                   ix++;
               }
               
              for(int wex = 0; wex<count;wex++)
              {
                  stmt = conn.prepareStatement("SELECT DISTINCT COUNT(subtopic) FROM agenda_topic WHERE topic=?");
                  stmt.setString(1, acstr[wex]);
                  rsx=stmt.executeQuery();
                  while(rsx.next())
                  {
                      countsub[wex]=rsx.getInt("COUNT(subtopic)");
                  }
              }
               
              int l=0;
              for(int wex =0; wex<count;wex++)
              { 
               totcont = totcont+countsub[wex];
              }
              subtopicdfm = new DefaultMutableTreeNode[totcont];
              
              for(int wex =0; wex<count ; wex++)
              {
                  stmt = conn.prepareStatement("SELECT DISTINCT subtopic FROM agenda_topic WHERE topic=?");
                  stmt.setString(1,acstr[wex]);
                  rsx = stmt.executeQuery();
                  while(rsx.next())
                  {
                     gstr = rsx.getString("subtopic");
                     subtopicdfm[l]= new DefaultMutableTreeNode(gstr);
                     l++;
                  }
              }
              l=0;
              for(int wex =0; wex<count; wex++)
              {
                for(int j=0;j<countsub[wex];j++)
                {
                  topicdfm[wex].add(subtopicdfm[l]);
                  l++;
                }
              }
              DefaultTreeModel dtm = (DefaultTreeModel) treeAgenda.getModel();        
              dtm.setRoot(tcs);
              
              
              ResultSet rs=stmt.executeQuery();
              stmt = conn.prepareStatement("SELECT * FROM pres_info WHERE user_id=?");
              stmt.setString(1,userid);
              rs = stmt.executeQuery();
              while(rs.next())
              {
                  fname=rs.getString("first_name");
                  lname=rs.getString("last_name");
                  tname=fname+lname;
                  profession=rs.getString("profession");
                  specialist = rs.getString("specialist");
                  image=rs.getBytes("pic");
              }
              txtsessionname.setText(sessionname);
              txtnamex.setText(fname);
              txtprofex.setText(profession);
              txtspecialistx.setText(specialist);
            Image img = Toolkit.getDefaultToolkit().createImage(image);
            ImageIcon icon =new ImageIcon(img);
            lblpicd.setIcon(icon);
            
            stmt=conn.prepareStatement("insert into activetask_tbl(session,glbtime,task) values(?,?,?)");
            stmt.setString(1,sessionname);
            stmt.setLong(2,0);
            stmt.setString(3,"pdfupload");
            stmt.executeUpdate();
            stmt.setString(1,sessionname);
            stmt.setLong(2,0);
            stmt.setString(3,"slideupload");
            stmt.executeUpdate();
            stmt.setString(1,sessionname);
            stmt.setLong(2,0);
            stmt.setString(3,"chat");
            stmt.executeUpdate();
            stmt.setString(1,sessionname);
            stmt.setLong(2,0);
            stmt.setString(3,"poll");
            stmt.executeUpdate();
            stmt.setString(1,sessionname);
            stmt.setLong(2,0);
            stmt.setString(3,"weblink");
            stmt.executeUpdate();
            stmt.setString(1,sessionname);
            stmt.setLong(2,1);
            stmt.setString(3,"nothing");
            stmt.executeUpdate();
            stmt.setString(1,sessionname);
            stmt.setLong(2,0);
            stmt.setString(3,"snap");
            stmt.executeUpdate();
            stmt.setString(1,sessionname);
            stmt.setLong(2,0);
            stmt.setString(3,"logout");
            stmt.executeUpdate();
            
            DefaultListModel lstmodx = new DefaultListModel();
        String sfxstring="";
        stmt=conn.prepareStatement("SELECT user_id FROM loggedin_tbl where sessname=?");
        stmt.setString(1,sessionname);
        rs=stmt.executeQuery();
        while(rs.next())
        {
            sfxstring=rs.getString("user_id");
            lstmodx.addElement(sfxstring);
        }
        lstAttendance.setModel(lstmodx);    
            
         
                
             int cnt=1;  
            DefaultComboBoxModel dlmx = new DefaultComboBoxModel();
               stmt=conn.prepareStatement("SELECT pollno FROM mcqpoll_tbl where session=?");
               stmt.setString(1,sessionname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                  String quesn=rs.getString("pollno");
                   dlmx.addElement(quesn);
                   cnt++;
               }
               jcbshowpollno.setModel(dlmx);
               txtsetpollno.setText(Integer.toString(cnt));
        
        stmt=conn.prepareStatement("SELECT topic FROM agenda_tbl WHERE session_name=?");
        stmt.setString(1,sessionname);
        
            }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try

    }//GEN-LAST:event_formWindowOpened

    private void radioyesnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioyesnoActionPerformed
        // TODO add your handling code here:
        txtoptC.setVisible(false);
        txtoptD.setVisible(false);
        txtoptA.setText("True");
        txtoptB.setText("False");
        jcbsetAns.removeItem("OptC");
        jcbsetAns.removeItem("OptD");
    }//GEN-LAST:event_radioyesnoActionPerformed

    private void radiomcqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiomcqActionPerformed
        // TODO add your handling code here:
        txtoptC.setVisible(true);
        txtoptD.setVisible(true);
        txtoptA.setText("");
        txtoptB.setText("");
        jcbsetAns.addItem("OptC");
        jcbsetAns.addItem("OptD");
    }//GEN-LAST:event_radiomcqActionPerformed

    private void treeAgendaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeAgendaMousePressed
        // TODO add your handling code here:
              

    }//GEN-LAST:event_treeAgendaMousePressed

    private void btnUploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadFileActionPerformed
        // TODO add your handling code here:
        UploadDataFrame udf = new UploadDataFrame(ipxcc,"pdf",userid,sessionname);
        udf.setVisible(true);
    }//GEN-LAST:event_btnUploadFileActionPerformed

    private void cmdaddlinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdaddlinkActionPerformed
        // TODO add your handling code here:
        
        String weblink=txtweblink.getText();
DefaultListModel lstdefl=new DefaultListModel();
String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
  String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   FileInputStream fis=null;   
   FileOutputStream fos=null;
   String value = System.getenv("TEMP");
   String USER = "root";
   String PASS = "";
   String strls="";
   Connection conn = null;
   PreparedStatement stmt = null;
   
               try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               stmt=conn.prepareStatement("INSERT INTO weblinkstbl(session,weblink) VALUES(?,?)");
               stmt.setString(1,sessionname);
               stmt.setString(2, weblink);
               int x = stmt.executeUpdate();
               stmt=conn.prepareStatement("SELECT * FROM weblinkstbl where session=?");
               stmt.setString(1,sessionname);
               ResultSet rs = stmt.executeQuery();
               while(rs.next())
               {
                   strls=rs.getString("weblink");
                   lstdefl.addElement(strls);
               }
               
               listWeblinks.setModel(lstdefl);
               java.util.Date d=new java.util.Date();
               long sec=d.getTime();
               stmt=conn.prepareStatement("update activetask_tbl set glbtime=? where task=? and session=?");
               stmt.setString(3,sessionname);
               stmt.setLong(1,sec);
               stmt.setString(2,"weblink");
               stmt.executeUpdate();
               JOptionPane.showMessageDialog(null,"New Link added Sucessfully");
               txtweblink.setText("");
               }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try

    }//GEN-LAST:event_cmdaddlinkActionPerformed

    private void canvasHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasHDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_canvasHDMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        try {
            // TODO add your handling code here:
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   String strls="";
   DefaultListModel lstdefl = new DefaultListModel();
   DefaultListModel lstupld = new DefaultListModel();
   DefaultListModel lsthndslw=new DefaultListModel();
            Connection conn = null;
            String sfxstring="";
             DefaultListModel lstmodx = new DefaultListModel(); 
             Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
            PreparedStatement stmt=conn.prepareStatement("SELECT user_id FROM loggedin_tbl where sessname=?");
            stmt.setString(1,sessionname);
            ResultSet rs=stmt.executeQuery();
            while(rs.next())
            {
                sfxstring=rs.getString("user_id");
                lstmodx.addElement(sfxstring);
            }
            lstAttendance.setModel(lstmodx);
            
            stmt=conn.prepareStatement("SELECT * FROM weblinkstbl where session=?");
            stmt.setString(1,sessionname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                   strls=rs.getString("weblink");
                   lstdefl.addElement(strls);
               }
               listWeblinks.setModel(lstdefl);
               
               stmt=conn.prepareStatement("SELECT * FROM pdfs_tbl where session=?");
               stmt.setString(1,sessionname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                   strls=rs.getString("pdfname");
                   lstupld.addElement(strls);
               }
               lstUpldlist.setModel(lstupld);
               
               stmt=conn.prepareStatement("SELECT * FROM handsup_tbl where session=?");
               stmt.setString(1,sessionname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                   strls=rs.getString("user_id");
                   lsthndslw.addElement(strls);
               }
               listHandsUp.setModel(lsthndslw);
               
               DefaultComboBoxModel dlmx = new DefaultComboBoxModel();
               stmt=conn.prepareStatement("SELECT pollno FROM mcqpoll_tbl where session=?");
               stmt.setString(1,sessionname);
               rs = stmt.executeQuery();
               int cnt=1;
               while(rs.next())
               {
                  String quesn=rs.getString("pollno");
                   dlmx.addElement(quesn);
                   cnt++;
               }
               jcbshowpollno.setModel(dlmx);
               jcbshowpollno.setSelectedItem(showpollno);
               txtsetpollno.setText(Integer.toString(cnt));
               
               String sendr="",recvr="",msgs="",agenuser="";
               String countwesw="";
               stmt=conn.prepareStatement("SELECT COUNT(*) FROM handsup_tbl where session=?");
               stmt.setString(1,sessionname);
               rs = stmt.executeQuery();
               while(rs.next())
               {
                 countwesw=rs.getString("COUNT(*)");
               }
               lblinqueue1.setText("In Queue: "+countwesw);
  

                   DefaultListModel dltchatfunc=new DefaultListModel();
                  stmt=conn.prepareStatement("SELECT * FROM chatcon_tbl WHERE ((sender=? AND receiver=?) OR (sender=? AND receiver=?)) and session=?");
                  stmt.setString(1, userid);
                  stmt.setString(2, setSenderNow);
                  stmt.setString(3, setSenderNow);
                  stmt.setString(4, userid);
                  stmt.setString(5,sessionname);
                  ResultSet rmx=stmt.executeQuery();
                  while(rmx.next())
                  {
                      sendr=rmx.getString("sender");
                      recvr=rmx.getString("receiver");
                      msgs=rmx.getString("message");
                      if(sendr==userid)
                          sendr="Me";
                      if(recvr==userid)
                          recvr="Me";
                      dltchatfunc.addElement(sendr + " to " + recvr + " : "+msgs);
                  }
                  lstChatHistory.setModel(dltchatfunc);
                  
            stmt=conn.prepareStatement("SELECT count(*) FROM loggedin_tbl where sessname=?");
            stmt.setString(1,sessionname);
            rs=stmt.executeQuery();
            while(rs.next())
            {
                sfxstring=rs.getString("count(*)");
            }
            lblattensw.setText("Attendance :"+sfxstring);
            
            

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formMouseEntered

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void lstAttendanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstAttendanceMouseClicked
        // TODO add your handling code here
    }//GEN-LAST:event_lstAttendanceMouseClicked

    private void btnAddPollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPollActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   String pollno="",ques="",optA="",optB="",optC="",optD="",correct=""; 
   String questype="";
   java.util.Date d=new java.util.Date();
   long sec=d.getTime();
   
   if(radiomcq.isSelected())
   {
       questype="mcq";
             pollno=txtsetpollno.getText();
             ques=txtquestion.getText();
             optA=txtoptA.getText();
             optB=txtoptB.getText();
             optC=txtoptC.getText();
             optD=txtoptD.getText();
             correct=jcbsetAns.getSelectedItem().toString();
             if(ques.equals("")||optA.equals("")||optB.equals("")||optC.equals("")||optD.equals("")){
                 JOptionPane.showMessageDialog(null,"Insufficient Data! ");
             }
             else{
                Connection conn = null;
                String sfxstring="";
                DefaultListModel lstmodx = new DefaultListModel(); 
                Class.forName(JDBC_DRIVER);
                //STEP 3: Open a connection
                System.out.println("Connecting to a selected database...");
                conn = DriverManager.getConnection(DB_URL, USER, PASS);
                PreparedStatement stmt=conn.prepareStatement("INSERT INTO mcqpoll_tbl(session,pollno,polltype,ques,optA,optB,optC,optD,correct) VALUES(?,?,?,?,?,?,?,?,?)");
                stmt.setString(1,sessionname);
                stmt.setString(2, pollno);
                stmt.setString(3, questype);
                stmt.setString(4, ques);
                stmt.setString(5, optA);
                stmt.setString(6, optB);
                stmt.setString(7, optC);
                stmt.setString(8, optD);
                stmt.setString(9, correct);
                int x=stmt.executeUpdate();
                stmt=conn.prepareStatement("update activetask_tbl set glbtime=? where task=? and session=?");
                stmt.setString(3,sessionname);
                stmt.setLong(1,sec);
                stmt.setString(2,"poll");
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "MCQ Poll Question uploaded successfully");
                stmt=conn.prepareStatement("SELECT pollno FROM mcqpoll_tbl where session=?");
                stmt.setString(1,sessionname);
                ResultSet rs = stmt.executeQuery();
                int cnt=1;
                DefaultComboBoxModel dlmx=new DefaultComboBoxModel();
                while(rs.next())
                {
                    String quesn=rs.getString("pollno");
                    dlmx.addElement(quesn);
                    cnt++;
                }
                    jcbshowpollno.setModel(dlmx);
                txtsetpollno.setText(Integer.toString(cnt));
                txtquestion.setText("");
                txtoptA.setText("");
                txtoptB.setText("");
                txtoptC.setText("");
                txtoptD.setText("");
             }
   }
   else if(radioyesno.isSelected())
   {
       questype="yno";
         pollno=txtsetpollno.getText();
             ques=txtquestion.getText();
             optA=txtoptA.getText();
             optB=txtoptB.getText();
             optC=txtoptC.getText();
             optD=txtoptD.getText();
             correct=jcbsetAns.getSelectedItem().toString();
             if(ques.equals("")||optA.equals("")||optB.equals("")){
                 JOptionPane.showMessageDialog(null,"Insufficient Data! ");
             }
             else{
                Connection conn = null;
                String sfxstring="";
                DefaultListModel lstmodx = new DefaultListModel(); 
                Class.forName(JDBC_DRIVER);
                //STEP 3: Open a connection
                System.out.println("Connecting to a selected database...");
                conn = DriverManager.getConnection(DB_URL, USER, PASS);
                PreparedStatement stmt=conn.prepareStatement("INSERT INTO mcqpoll_tbl(session,pollno,polltype,ques,optA,optB,correct) VALUES(?,?,?,?,?,?,?)");
                stmt.setString(1,sessionname);
                stmt.setString(2, pollno);
                stmt.setString(3,questype);
                stmt.setString(4, ques);
                stmt.setString(5, optA);
                stmt.setString(6, optB);
                stmt.setString(7, correct);
                int x=stmt.executeUpdate();
                stmt=conn.prepareStatement("update activetask_tbl set glbtime=? where task=? and session=?");
                    stmt.setString(3,sessionname);
                stmt.setLong(1,sec);
                stmt.setString(2,"poll");
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Yes/No Poll Question uploaded successfully");
                stmt=conn.prepareStatement("SELECT pollno FROM mcqpoll_tbl where session=?");
                stmt.setString(1,sessionname);
                ResultSet rs = stmt.executeQuery();
                int cnt=1;
                DefaultComboBoxModel dlmx=new DefaultComboBoxModel();
                while(rs.next())
                {
                    String quesn=rs.getString("pollno");
                    dlmx.addElement(quesn);
                    cnt++;
                }
                    jcbshowpollno.setModel(dlmx);
                txtsetpollno.setText(Integer.toString(cnt));
                txtquestion.setText("");
                txtoptA.setText("True");
                txtoptB.setText("False");
                txtoptC.setText("");
                txtoptD.setText("");
             }
   }
 
             
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }//GEN-LAST:event_btnAddPollActionPerformed

    private void btnResponseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResponseActionPerformed
        // TODO add your handling code here:
            // TODO add your handling code here:
        String qstnx="";
        try {
            // TODO add your handling code here:
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   String qtype="";
   String optionA="",optionB="",optionC="",optionD="";
   int npols=0,opt1=0,opt2=0,opt3=0,opt4=0;
   String showpolx=showpollno;
            Connection conn = null;
            String sfxstring="";
             Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               
               
  PreparedStatement stmt=conn.prepareStatement("SELECT polltype FROM mcqpoll_tbl WHERE pollno=? and session=?");
  stmt.setString(2,sessionname);
  stmt.setString(1, showpolx);
   ResultSet rs = stmt.executeQuery();
   while(rs.next())
   {
    qtype=rs.getString("polltype");   
   }
   
   if(qtype.equals("yno"))
   {
   stmt=conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? and session=?");
   stmt.setString(2,sessionname);
  stmt.setString(1, showpolx);
   rs = stmt.executeQuery();
   while(rs.next())
   {
    npols=rs.getInt("COUNT(*)");   
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optA' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessionname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt1=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optB' and session=?");
   stmt.setString(2,sessionname);
   stmt.setString(1, showpolx);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt2=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT * FROM mcqpoll_tbl WHERE pollno=? and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessionname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       qstnx=rs.getString("ques");
       optionA=rs.getString("optA");
       optionB=rs.getString("optB");
   }
   int p1=(int) ((opt1/(float)npols)*100); 
   int p2=(int) ((opt2/(float)npols)*100);
        DefaultPieDataset dpst =new DefaultPieDataset();
        dpst.setValue(optionA, p1);
        dpst.setValue(optionB, p2);
        PieChart demo = new PieChart("Response...", qstnx,dpst);
          demo.pack();
          demo.setVisible(true);
   }
   
   else if(qtype.equals("mcq"))
   {
    stmt=conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? and session=?");
  stmt.setString(1, showpolx);
  stmt.setString(2,sessionname);
   rs = stmt.executeQuery();
   while(rs.next())
   {
    npols=rs.getInt("COUNT(*)");   
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optA' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessionname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt1=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optB' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessionname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt2=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optC' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessionname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt3=rs.getInt("COUNT(*)");
   }
   
   stmt = conn.prepareStatement("SELECT DISTINCT COUNT(*) FROM studpolls WHERE pollno=? AND answer='optD' and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessionname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       opt4=rs.getInt("COUNT(*)");
   }
   
    stmt = conn.prepareStatement("SELECT * FROM mcqpoll_tbl WHERE pollno=? and session=?");
   stmt.setString(1, showpolx);
   stmt.setString(2,sessionname);
   rs=stmt.executeQuery();
   while(rs.next())
   {
       qstnx=rs.getString("ques");
       optionA=rs.getString("optA");
       optionB=rs.getString("optB");
       optionC=rs.getString("optC");
       optionD=rs.getString("optD");
   }
   int p1=(int) ((opt1/(float)npols)*100); 
   int p2=(int) ((opt2/(float)npols)*100);
   int p3=(int) ((opt3/(float)npols)*100);
   int p4=(int) ((opt4/(float)npols)*100);
        DefaultPieDataset dpst =new DefaultPieDataset();
        dpst.setValue(optionA, p1);
        dpst.setValue(optionB, p2);
        dpst.setValue(optionC, p3);
        dpst.setValue(optionD, p4);
        PieChart demo = new PieChart("Response...", qstnx,dpst);
          demo.pack();
          demo.setVisible(true);
   }
   
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }//GEN-LAST:event_btnResponseActionPerformed

    private void jcbshowpollnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbshowpollnoActionPerformed
        // TODO add your handling code here:
                   
    }//GEN-LAST:event_jcbshowpollnoActionPerformed

    private void btnsndCnvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsndCnvActionPerformed
        // TODO add your handling code here:
        try {
                 String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
                 String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
                 String USER = "root";
                 String PASS = "";
                Connection conn = null;
                PreparedStatement stmt=null;
                 Class.forName(JDBC_DRIVER);
                
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
                Robot robot = new Robot();
                String str=System.getenv("TEMP");
                int i=0;
		String s=new String();
		while(i<str.length())
		{
			if(str.charAt(i)==';')
				break;
				char c=str.charAt(i);
			s=s+Character.toString(c);
			i++;
		}
       BufferedImage screenShot = robot.createScreenCapture(new Rectangle(getX()+242,getY()+195,canvasHD.getWidth()-65,canvasHD.getHeight()-30));
       ImageIO.write(screenShot, "JPG", new FileOutputStream(s+"/"+"screenShot.jpg"));
        File file = new File(s+"/"+"screenShot.jpg");
               FileInputStream fis = new FileInputStream(file);
               stmt=conn.prepareStatement("DELETE FROM screenshots_tbl WHERE user_id=?");
               stmt.setString(1, userid);
               stmt.executeUpdate();
               stmt = conn.prepareStatement("INSERT INTO screenshots_tbl(session,user_id,scrshot) VALUES(?,?,?)");
                    stmt.setString(1,sessionname);
                 stmt.setString(2, userid);
                 stmt.setBinaryStream(3, fis,(int)file.length());
                 stmt.executeUpdate();
               java.util.Date d=new java.util.Date();
               long sec=d.getTime();
               stmt=conn.prepareStatement("update activetask_tbl set glbtime=? where task=? and session=?");
               stmt.setLong(1,sec);
               stmt.setString(2,"snap");
               stmt.setString(3,sessionname);
               stmt.executeUpdate();
               
            } catch (ClassNotFoundException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
                Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
            } catch (AWTException ex) {
                Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    }//GEN-LAST:event_btnsndCnvActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Connection conn=null;
            PreparedStatement stmt=null;
             String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
             String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
             String USER = "root";
             String PASS = "";
             String strls="";
             String sendr="",recvr="",msgs="",agenuser="";
               Class.forName(JDBC_DRIVER);
               //STEP 3: Open a connection
               strls=txtchatbox.getText();
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);

                  stmt=conn.prepareStatement("INSERT INTO chatcon_tbl(session,sender,receiver,message) VALUES(?,?,?,?)");
                  stmt.setString(1,sessionname);
                  stmt.setString(2, userid);
                  stmt.setString(3, setSenderNow);
                  stmt.setString(4, strls);
                  stmt.executeUpdate();
                   DefaultListModel dltchatfunc=new DefaultListModel();
                  stmt=conn.prepareStatement("SELECT * FROM chatcon_tbl WHERE ((sender=? AND receiver=?) OR (sender=? AND receiver=?)) and session=?");
                  stmt.setString(1, userid);
                  stmt.setString(2, setSenderNow);
                  stmt.setString(3, setSenderNow);
                  stmt.setString(4, userid);
                  stmt.setString(5,sessionname);
                  ResultSet rmx=stmt.executeQuery();
                  while(rmx.next())
                  {
                      sendr=rmx.getString("sender");
                      recvr=rmx.getString("receiver");
                      msgs=rmx.getString("message");
                      dltchatfunc.addElement(sendr + " to " + recvr + ":"+msgs);
                  }
                  lstChatHistory.setModel(dltchatfunc);
                  java.util.Date d=new java.util.Date();
                  long sec=d.getTime();
                  stmt=conn.prepareStatement("update activetask_tbl set glbtime=? where task=? and session=?");
                  stmt.setString(3,sessionname);
               stmt.setLong(1,sec);
               stmt.setString(2,"chat");
               stmt.executeUpdate();
               txtchatbox.setText("");   
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ParticipantView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ParticipantView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmddellinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmddellinkActionPerformed
        // TODO add your handling code here:
        String delitem=websel;
        int delix=listWeblinks.getSelectedIndex();
                     String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   //String ltp = (String)jcbaccfor.getSelectedItem();
   String tname="",fname="",lname="";
   //accfor,age,phno,usid,paswd,cnfpaswd,branch,profession,specialist;
   //  Database credentials
   FileInputStream fis=null;   
   String USER = "root";
   String PASS = "";
   Connection conn = null;
   PreparedStatement stmt = null;
   
            try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER);
                
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
             //  lstdelcan.remove(delix);
               stmt = conn.prepareStatement("DELETE FROM weblinkstbl WHERE weblink=? and session=?");
               stmt.setString(1,delitem);
               stmt.setString(2,sessionname);
               int x = stmt.executeUpdate();
               JOptionPane.showMessageDialog(null,delitem+ " Link Removed Successfully");
               stmt=conn.prepareStatement("SELECT * FROM weblinkstbl where session=?");
                stmt.setString(1,sessionname);
               DefaultListModel dlmod = new DefaultListModel();

               
               ResultSet rs = stmt.executeQuery();
                while(rs.next())
             {
                    tname=rs.getString("weblink");
                    dlmod.addElement(tname);
             }
             listWeblinks.setModel(dlmod);
              rs.close();
               //STEP 4: Execute a query
            }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try

    }//GEN-LAST:event_cmddellinkActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void txtsessionnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsessionnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsessionnameActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        About a=new About();
        a.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        HelpPresenter hp=new HelpPresenter();
        hp.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
       String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
       String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
       String USER = "root";
       String PASS = "";
       Connection conn;
        try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               PreparedStatement st=conn.prepareStatement("update session_tbl set activated=? where session_name=?");
               st.setString(2,sessionname);
               st.setInt(1,0);
               st.executeUpdate();
               st=conn.prepareStatement("delete from chatcon_tbl where session=?");
               st.setString(1,sessionname);
               st.executeUpdate();
               st=conn.prepareStatement("update activetask_tbl set glbtime=0 where session=?");
               st.setString(1,sessionname);
               st.executeUpdate();
               st=conn.prepareStatement("update activetask_tbl set glbtime=1 where task=? and session=?");
               st.setString(1,"nothing");
               st.setString(2,sessionname);
               st.executeUpdate();
               java.util.Date d=new java.util.Date();
               long sec=d.getTime();
               st=conn.prepareStatement("update activetask_tbl set glbtime=? where task=? and session=?");
               st.setString(3,sessionname);
               st.setLong(1,sec);
               st.setString(2,"logout");
               st.executeUpdate();
               st=conn.prepareStatement("select count(*) from loggedin_tbl where sessname=?");
               st.setString(1,sessionname);
               ResultSet rs=st.executeQuery();
               int cnt=0;
               while(rs.next()){
                   cnt=rs.getInt("count(*)");
               }
               System.out.println("Count :"+cnt);
               if(cnt==0){
                   st=conn.prepareStatement("delete from activetask_tbl where session=?");
                   st.setString(1,sessionname);
                   st.executeUpdate();
               }
               st=conn.prepareStatement("delete from screenshots_tbl where session=? and user_id=?");
               st.setString(1,sessionname);
               st.setString(2,userid);
               st.executeUpdate();
               JOptionPane.showMessageDialog(null,userid+" logged out sucessfully!");
               
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void listWeblinksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listWeblinksMouseClicked
        // TODO add your handling code here:
        String url = "http://www.google.com";
        int x=evt.getClickCount();
        if(x==1){
            websel=listWeblinks.getSelectedValue().toString();
        }
        if(x==2)
        {
            url=listWeblinks.getSelectedValue().toString();
        if(Desktop.isDesktopSupported()){
            Desktop desktop = Desktop.getDesktop();
            try {
                try {
                    desktop.browse(new URI(url));
                } catch (URISyntaxException ex) {
                    Logger.getLogger(PresenterView2.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Invalid URL to be opened!");
                }
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,"Invalid URL to be opened!");
            }
        }else{
            Runtime runtime = Runtime.getRuntime();
            try {
                runtime.exec("xdg-open " + url);
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,"Invalid URL to be opened!");
            }
        }
        }
    }//GEN-LAST:event_listWeblinksMouseClicked

    private void listHandsUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listHandsUpMouseClicked
        // TODO add your handling code here:
         if(evt.getClickCount()==2)
        {
            setSenderNow=listHandsUp.getSelectedValue().toString();
            JOptionPane.showMessageDialog(null,"Now you can chat with : "+setSenderNow);
            currentpartc.setText("Current: "+setSenderNow);
            String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
       String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
       String USER = "root";
       String PASS = "";
       Connection conn;
        try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               PreparedStatement st=conn.prepareStatement("delete from handsup_tbl where session=? and user_id=?");
               st.setString(1,sessionname);
               st.setString(2,setSenderNow);
               st.executeUpdate();
               jButton1.setEnabled(true);
        }
        catch(Exception e)
        {}
        }
    }//GEN-LAST:event_listHandsUpMouseClicked

    private void txtchatboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtchatboxActionPerformed
        // TODO add your handling code here:
        jButton1ActionPerformed(evt);
    }//GEN-LAST:event_txtchatboxActionPerformed

    private void listHandsUpComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_listHandsUpComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_listHandsUpComponentHidden

    private void lblattenswMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblattenswMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblattenswMouseClicked

    private void canvasHDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasHDMouseEntered
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_canvasHDMouseEntered

    private void treeAgendaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeAgendaMouseEntered
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_treeAgendaMouseEntered

    private void jTabbedPane1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseEntered
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jTabbedPane1MouseEntered

    private void treeAgendaValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeAgendaValueChanged
        // TODO add your handling code here:
        if (treeAgenda.isSelectionEmpty()) return;   
      TreePath path = treeAgenda.getSelectionPath();
      DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();
      Object userObject = selectedNode.getUserObject();
      String usrInput = userObject.toString();
   String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
      String sbtopic="";
   //  Database credentials
   FileInputStream fis=null;   
   String USER = "root";
   String PASS = "";
   Connection conn = null;
   PreparedStatement stmt = null;
   UploadDataFrame udfx = new UploadDataFrame(ipxcc,usrInput,"Slide",userid,sessionname);
   udfx.setVisible(true);
    }//GEN-LAST:event_treeAgendaValueChanged

    private void jTabbedPane1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jTabbedPane1MouseMoved

    private void treeAgendaMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeAgendaMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_treeAgendaMouseMoved

    private void canvasHDMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvasHDMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_canvasHDMouseMoved

    private void jPanel5MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jPanel5MouseMoved

    private void jPanel6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jPanel6MouseMoved

    private void jPanel3MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jPanel3MouseMoved

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_jPanel1MouseMoved

    private void lstChatHistoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstChatHistoryMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lstChatHistoryMouseEntered

    private void lstChatHistoryMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstChatHistoryMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_lstChatHistoryMouseMoved

    private void listWeblinksMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listWeblinksMouseMoved
        // TODO add your handling code here:
        formMouseEntered(evt);
    }//GEN-LAST:event_listWeblinksMouseMoved

    private void jcbshowpollnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbshowpollnoItemStateChanged
        // TODO add your handling code here:
        String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String USER = "root";
   String PASS = "";
   String questype="";
   String quesn="";
   int opt1=0,opt2=0,opt3=0,opt4=0;
   DefaultListModel dlm = new DefaultListModel();
   Connection conn = null;
   PreparedStatement stmt = null;
      try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
                String jcbpollnox=jcbshowpollno.getSelectedItem().toString();
                showpollno=jcbpollnox;
               stmt=conn.prepareStatement("SELECT polltype FROM mcqpoll_tbl WHERE pollno=? and session=?");
               stmt.setString(1, jcbpollnox);
               stmt.setString(2,sessionname);
               ResultSet rs = stmt.executeQuery();
               while(rs.next())
               {
                  questype=rs.getString("polltype"); 
               }
              
               if(questype.equals("yno"))
               {
                   stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optA' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessionname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt1=rs.getInt("COUNT(*)");
                       dlm.addElement("A:"+opt1);
                   }
                    stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optB' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessionname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt2=rs.getInt("COUNT(*)");
                       dlm.addElement("B:"+opt2);
                   }
                   jlPoll.setModel(dlm);
               }
               else if(questype.equals("mcq"))
               {
                 stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optA' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessionname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt1=rs.getInt("COUNT(*)");
                       dlm.addElement("A:"+opt1);
                   }
                    stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optB' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessionname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt2=rs.getInt("COUNT(*)");
                       dlm.addElement("B:"+opt2);
                   }
                   stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optC' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessionname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt3=rs.getInt("COUNT(*)");
                       dlm.addElement("C:"+opt3);
                   }
                   stmt=conn.prepareStatement("SELECT COUNT(*) FROM studpolls WHERE answer='optD' AND pollno=? and session=?");
                   stmt.setString(1, jcbpollnox);
                   stmt.setString(2,sessionname);
                   rs=stmt.executeQuery();
                   while(rs.next())
                   {
                       opt2=rs.getInt("COUNT(*)");
                       dlm.addElement("D:"+opt2);
                   }
                   jlPoll.setModel(dlm);  
               }
      }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try

    }//GEN-LAST:event_jcbshowpollnoItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PresenterView2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PresenterView2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PresenterView2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PresenterView2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PresenterView2().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPoll;
    private javax.swing.JButton btnResponse;
    private javax.swing.JButton btnUploadFile;
    private javax.swing.JButton btnsndCnv;
    private javax.swing.JInternalFrame canvasHD;
    private javax.swing.ButtonGroup cbgPolluxTroy;
    private javax.swing.JButton cmdaddlink;
    private javax.swing.JButton cmddellink;
    private javax.swing.JLabel currentpartc;
    private javax.swing.JPanel drawingPanelPresenter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JComboBox jcbsetAns;
    private javax.swing.JComboBox jcbshowpollno;
    private javax.swing.JList jlPoll;
    private javax.swing.JLabel lblattensw;
    private javax.swing.JLabel lblinqueue1;
    private javax.swing.JLabel lblpicd;
    private javax.swing.JLabel lblpollno;
    private javax.swing.JList listHandsUp;
    private javax.swing.JList listWeblinks;
    private javax.swing.JList lstAttendance;
    private javax.swing.JList lstChatHistory;
    private javax.swing.JList lstUpldlist;
    private javax.swing.JRadioButton radiomcq;
    private javax.swing.JRadioButton radioyesno;
    private javax.swing.JTree treeAgenda;
    private javax.swing.JTextField txtchatbox;
    private javax.swing.JTextField txtnamex;
    private javax.swing.JTextField txtoptA;
    private javax.swing.JTextField txtoptB;
    private javax.swing.JTextField txtoptC;
    private javax.swing.JTextField txtoptD;
    private javax.swing.JTextField txtprofex;
    private javax.swing.JTextField txtquestion;
    private javax.swing.JTextField txtsessionname;
    private javax.swing.JTextField txtsetpollno;
    private javax.swing.JTextField txtspecialistx;
    private javax.swing.JTextField txtweblink;
    // End of variables declaration//GEN-END:variables
}
