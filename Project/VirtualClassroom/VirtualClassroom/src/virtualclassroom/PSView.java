/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package virtualclassroom;

import java.awt.image.BufferedImage;
import java.io.*;
import java.sql.*;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class PSView extends javax.swing.JFrame {

    /**
     * Creates new form PSView
     */
    String usrInput="";
    String ipxcc="";
    String sessionname="";
    static String selectedfile="";
    public PSView(String usrInput,String ipxcc,String session) {
        this.usrInput=usrInput;
        this.ipxcc = ipxcc;
        this.sessionname=session;
        initComponents();
          this.setLocationRelativeTo(null);
    }
    public PSView() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstSlideDB = new javax.swing.JList();
        btnSelectDB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select Presentation...");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lstSlideDB.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        lstSlideDB.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstSlideDB.setToolTipText("Select a presentation to load");
        jScrollPane1.setViewportView(lstSlideDB);

        btnSelectDB.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnSelectDB.setText("Load...");
        btnSelectDB.setToolTipText("Click to load the selected Presentation...");
        btnSelectDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectDBActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 48)); // NOI18N
        jLabel1.setText("Select Presentation...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSelectDB, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelectDB)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
                       String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String sldname=""; 
   //  Database credentials
   FileInputStream fis=null;   
   String USER = "root";
   String PASS = "";
   Connection conn = null;
   PreparedStatement stmt = null;
   
               try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER);
                DefaultListModel dlmod=new DefaultListModel();
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               stmt = conn.prepareStatement("SELECT * FROM slides_tbl WHERE subtopic=? and session=?");
               stmt.setString(2,sessionname);
               stmt.setString(1, usrInput);
               ResultSet rs = stmt.executeQuery();
                while(rs.next())
                {
                  sldname=rs.getString("slidename"); 
                  dlmod.addElement(sldname);          
                }
                lstSlideDB.setModel(dlmod);
      }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try

    }//GEN-LAST:event_formWindowOpened
    public static String getSelectedFile(){
        return selectedfile;
    }
    private void btnSelectDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectDBActionPerformed
        // TODO add your handling code here:
        String selSlide=lstSlideDB.getSelectedValue().toString();
                       String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   String DB_URL = "jdbc:mysql://"+ipxcc+":3306/vctuser";
   String sldname=""; 
   //  Database credentials
   byte[] fileDwn=null;
   FileInputStream fis=null;   
   FileOutputStream fos=null;
   String s = System.getenv("TEMP");
   int i=0;
    String url=new String();
    while(i<s.length())
    {
        if(s.charAt(i)==';')
            break;
        char c=s.charAt(i);
        url=url+Character.toString(c);
	i++;
    }
   File fsx = new File(url+"/"+selSlide);
   String USER = "root";
   String PASS = "";
   Connection conn = null;
   PreparedStatement stmt = null;
   
               try{
               //STEP 2: Register JDBC driver
                Class.forName(JDBC_DRIVER); 
               //STEP 3: Open a connection
               System.out.println("Connecting to a selected database...");
               conn = DriverManager.getConnection(DB_URL, USER, PASS);
               System.out.println("Connected database successfully...");
               stmt=conn.prepareStatement("SELECT slide FROM slides_tbl WHERE slidename=? and session=?");
               stmt.setString(2,sessionname);
               stmt.setString(1, selSlide);
               ResultSet rs = stmt.executeQuery();
               while(rs.next())
               {
                   fileDwn=rs.getBytes("slide");
               }
               fos = new FileOutputStream(fsx);
               fos.write(fileDwn);
               fos.close();
               selectedfile=selSlide;
               JOptionPane.showMessageDialog(null,"Presentation Unpacked.\nGoto the Presentation tab and click on Load Slide...");
               this.dispose();
               }catch(SQLException se){
               //Handle errors for JDBC
               se.printStackTrace();
            }catch(Exception e){
               //Handle errors for Class.forName
               e.printStackTrace();
            }finally{
               //finally block used to close resources
               try{
                  if(stmt!=null)
                     conn.close();
               }catch(SQLException se){
               }// do nothing
               try{
                  if(conn!=null)
                     conn.close();
               }catch(SQLException se){
                  se.printStackTrace();
               }//end finally try
            }//end try
      
     
    }//GEN-LAST:event_btnSelectDBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PSView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PSView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PSView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PSView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PSView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectDB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstSlideDB;
    // End of variables declaration//GEN-END:variables
}
